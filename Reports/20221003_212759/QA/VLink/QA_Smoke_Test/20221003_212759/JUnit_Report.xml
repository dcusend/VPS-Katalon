<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="QA_Smoke_Test" time="3.067" tests="1" failures="0" errors="0">
   <testsuite name="QA_Smoke_Test" tests="1" failures="0" errors="0" time="3.067" skipped="0" timestamp="2022-10-03 21:28:05" hostname="imtiaz - DESKTOP-B2QI6NS.govolution.com" id="Test Suites/QA/VLink/QA_Smoke_Test">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="E:\\Cloned-Project-Katalon\\VPS-Katalon\\Reports\\20221003_212759\\QA\\VLink\\QA_Smoke_Test\\20221003_212759"/>
         <property name="logFiles" value="E:\\Cloned-Project-Katalon\\VPS-Katalon\\Reports\\20221003_212759\\QA\\VLink\\QA_Smoke_Test\\20221003_212759\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="imtiaz - DESKTOP-B2QI6NS.govolution.com"/>
         <property name="hostAddress" value="172.31.253.54"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="8.2.5.208"/>
      </properties>
      <testcase name="Test Cases/RecAndPlayBk/VLink/VLink-AuthOnly" time="2.68" classname="Test Cases/RecAndPlayBk/VLink/VLink-AuthOnly" status="PASSED">
         <system-out><![CDATA[2022-10-03 21:28:06 - [TEST_CASE][PASSED] - Test Cases/RecAndPlayBk/VLink/VLink-AuthOnly: Test Cases/RecAndPlayBk/VLink/VLink-AuthOnly

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - executionProfile = getExecutionProfile(): null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - out.println("executionProfile : " + executionProfile): null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - appName = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - appID = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - username = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - password = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - cardNameV = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - al1V = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - al2V = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - zipV = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - cardTypeV = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - last4V = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - resText = "Fail": null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - resColumn = "Result": null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - numOfRows = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - dataFile = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - nameSheet = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - nameSheet = "Auth": null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - numOfRows = findTestData("QA/VLinkTestData/VLinkSmokeData").getRowNumbers(): null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - dataFile = "QA/VLinkTestData/VLinkSmokeData": null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - switch (executionProfile): null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - case "QAProfile":: null

2022-10-03 21:28:07 - [TEST_STEP][PASSED] - appID = findTestData(dataFile).getValue("AppIDQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - username = findTestData(dataFile).getValue("UsernameQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - password = findTestData(dataFile).getValue("PasswordQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - break: null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - switch (executionProfile): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - case "QAProfile":: null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - appID = findTestData(dataFile).getValue("AppIDQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - username = findTestData(dataFile).getValue("UsernameQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - password = findTestData(dataFile).getValue("PasswordQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - break: null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - switch (executionProfile): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - case "QAProfile":: null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - appID = findTestData(dataFile).getValue("AppIDQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - username = findTestData(dataFile).getValue("UsernameQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - password = findTestData(dataFile).getValue("PasswordQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - break: null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - switch (executionProfile): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - case "QAProfile":: null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - appID = findTestData(dataFile).getValue("AppIDQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - username = findTestData(dataFile).getValue("UsernameQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - password = findTestData(dataFile).getValue("PasswordQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - break: null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - switch (executionProfile): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - case "QAProfile":: null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - appID = findTestData(dataFile).getValue("AppIDQA", row): null

2022-10-03 21:28:08 - [TEST_STEP][PASSED] - username = findTestData(dataFile).getValue("UsernameQA", row): null

2022-10-03 21:28:09 - [TEST_STEP][PASSED] - password = findTestData(dataFile).getValue("PasswordQA", row): null

2022-10-03 21:28:09 - [TEST_STEP][PASSED] - break: null

2022-10-03 21:28:09 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2022-10-03 21:28:05 - [TEST_SUITE][PASSED] - QA_Smoke_Test: Test Cases/RecAndPlayBk/VLink/VLink-AuthOnly]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
