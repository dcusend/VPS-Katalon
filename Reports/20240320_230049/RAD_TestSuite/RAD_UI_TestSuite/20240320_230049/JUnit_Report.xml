<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="RAD_UI_TestSuite" time="669.161" tests="16" failures="2" errors="0">
   <testsuite name="RAD_UI_TestSuite" tests="16" failures="2" errors="0" time="669.161" skipped="0" timestamp="2024-03-20 23:00:56" hostname="imtiaz - DESKTOP-B2QI6NS.govolution.com" id="Test Suites/RAD_TestSuite/RAD_UI_TestSuite">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="E:\\Cloned-Project-Katalon\\VPS-Katalon\\Reports\\20240320_230049\\RAD_TestSuite\\RAD_UI_TestSuite\\20240320_230049"/>
         <property name="logFiles" value="E:\\Cloned-Project-Katalon\\VPS-Katalon\\Reports\\20240320_230049\\RAD_TestSuite\\RAD_UI_TestSuite\\20240320_230049\\execution0.log"/>
         <property name="attachments" value="E:\\Cloned-Project-Katalon\\VPS-Katalon\\Reports\\20240320_230049\\RAD_TestSuite\\RAD_UI_TestSuite\\20240320_230049\\1710990501244.png"/>
         <property name="hostName" value="imtiaz - DESKTOP-B2QI6NS.govolution.com"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="8.6.6.208"/>
         <property name="browser" value="Chrome 122.0.0.0"/>
         <property name="hostAddress" value="172.31.253.185"/>
         <property name="sessionId" value="f30152cedecdf634b460d78615e68ca2"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Windows 10"/>
      </properties>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/FEINmismatchError" time="31.368" classname="Test Cases/RAD_TestCases/Negative_TestCases/FEINmismatchError" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:00:56 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/FEINmismatchError: Test Cases/RAD_TestCases/Negative_TestCases/FEINmismatchError

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/FEINmismatch.xlsx": null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - nameSheet = "FEINmismatch": null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - dataFile = "RADTestData/FEINmismatch": null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - Paymenttype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:00:57 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:58 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:00:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:01:00 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:01:00 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:01:00 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:01:00 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:01:03 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:01:03 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:01:03 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:01:03 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:05 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:01:05 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:06 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:07 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:07 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:07 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:08 - [MESSAGE][PASSED] - All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:08 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:09 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 2, CONTINUE_ON_FAILURE): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:01:09 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:01:09 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:09 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:09 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN"), "RigbBhfdqODKcAsiUrg+1Q=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:01:10 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:01:10 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN_ReEnter"), "RigbBhfdqOBBGbZqm4oFJQ=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:01:10 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:01:10 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:10 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), ""): Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:01:11 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:01:11 - [TEST_STEP][PASSED] - verifyTextPresent("The FEIN and Re-type FEIN do not match", true): Text 'The FEIN and Re-type FEIN do not match' is present on page  using regular expression

2024-03-20 23:01:12 - [MESSAGE][PASSED] - Text 'The FEIN and Re-type FEIN do not match' is present on page  using regular expression

2024-03-20 23:01:12 - [TEST_STEP][PASSED] - if (verifyTextPresent("The FEIN and Re-type FEIN do not match", true)): null

2024-03-20 23:01:12 - [MESSAGE][PASSED] - Text 'The FEIN and Re-type FEIN do not match' is present on page  using regular expression

2024-03-20 23:01:12 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:01:12 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:01:12 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:01:12 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:01:13 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:01:13 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:01:13 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:01:14 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:01:14 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:01:14 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:01:16 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:01:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:01:16 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:01:16 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:18 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:18 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:19 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:19 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:19 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:20 - [MESSAGE][PASSED] - All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:20 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:20 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:21 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:21 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 2, CONTINUE_ON_FAILURE): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:01:21 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:01:21 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:21 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:21 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN"), "RigbBhfdqODKcAsiUrg+1Q=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:01:22 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:01:22 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN_ReEnter"), "RigbBhfdqOBBGbZqm4oFJQ=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:01:23 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:01:23 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:23 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), ""): Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:01:23 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:01:23 - [TEST_STEP][PASSED] - verifyTextPresent("The FEIN and Re-type FEIN do not match", true): Text 'The FEIN and Re-type FEIN do not match' is present on page  using regular expression

2024-03-20 23:01:24 - [MESSAGE][PASSED] - Text 'The FEIN and Re-type FEIN do not match' is present on page  using regular expression

2024-03-20 23:01:24 - [TEST_STEP][PASSED] - if (verifyTextPresent("The FEIN and Re-type FEIN do not match", true)): null

2024-03-20 23:01:24 - [MESSAGE][PASSED] - Text 'The FEIN and Re-type FEIN do not match' is present on page  using regular expression

2024-03-20 23:01:24 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:01:24 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:01:24 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:01:24 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:01:24 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:01:24 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:24 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:25 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:26 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:27 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/FEINSSNmismatchError" time="46.846" classname="Test Cases/RAD_TestCases/Negative_TestCases/FEINSSNmismatchError" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:01:28 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/FEINSSNmismatchError: Test Cases/RAD_TestCases/Negative_TestCases/FEINSSNmismatchError

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/FEINmismatch.xlsx": null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - nameSheet = "FEINSSNmismatch": null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - dataFile = "RADTestData/FEINSSNmismatch": null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - Paymenttype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:28 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:01:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:30 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:01:30 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:01:30 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:01:31 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:01:31 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:01:31 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:01:32 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:01:32 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:01:32 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:01:32 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:34 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:01:34 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:35 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:36 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:36 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:36 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:36 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Non-Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:36 - [MESSAGE][PASSED] - All options with label 'PTE Non-Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:36 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:37 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 2, CONTINUE_ON_FAILURE): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:01:38 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:01:38 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:38 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:38 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_FeinSsn_New_2"), "RigbBhfdqODKcAsiUrg+1Q=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:01:38 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:01:38 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_RetypeFeinSsn_New_2"), "RigbBhfdqOD+04WBHw5iKw=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:01:39 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:01:39 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:39 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), ""): Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:01:40 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - if (verifyTextPresent("The FEIN/SSN and Re-type FEIN/SSN do not match", true)): null

2024-03-20 23:01:40 - [MESSAGE][PASSED] - Text 'The FEIN/SSN and Re-type FEIN/SSN do not match' is present on page  using regular expression

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:01:40 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:01:40 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:01:40 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:01:41 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:01:41 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:01:41 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:01:43 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:01:43 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:43 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:01:43 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:46 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:46 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:47 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:47 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:47 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:47 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Non-Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:47 - [MESSAGE][PASSED] - All options with label 'PTE Non-Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:47 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:48 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 2, CONTINUE_ON_FAILURE): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:01:49 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:01:49 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:49 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:49 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_FeinSsn_New_2"), "RigbBhfdqODKcAsiUrg+1Q=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:01:49 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:01:49 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_RetypeFeinSsn_New_2"), "RigbBhfdqOD+04WBHw5iKw=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:01:50 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:01:50 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:50 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), ""): Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:01:51 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:01:51 - [TEST_STEP][PASSED] - if (verifyTextPresent("The FEIN/SSN and Re-type FEIN/SSN do not match", true)): null

2024-03-20 23:01:51 - [MESSAGE][PASSED] - Text 'The FEIN/SSN and Re-type FEIN/SSN do not match' is present on page  using regular expression

2024-03-20 23:01:51 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:01:51 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:01:51 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:01:51 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:01:51 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:01:51 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:01:52 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:01:52 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:01:53 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:01:53 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:01:53 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:01:55 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:01:55 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:55 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:01:55 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:57 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:01:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:01:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:01:58 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:01:58 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:01:58 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Tax Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:59 - [MESSAGE][PASSED] - All options with label 'PTE Tax Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:01:59 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:01:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:00 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:00 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 2, CONTINUE_ON_FAILURE): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:02:00 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:02:00 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:00 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:00 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_FeinSsn_New_2"), "RigbBhfdqODKcAsiUrg+1Q=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:02:01 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:02:01 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_RetypeFeinSsn_New_2"), "RigbBhfdqOD+04WBHw5iKw=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:02:02 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:02:02 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:02 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), ""): Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:02:02 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:02:02 - [TEST_STEP][PASSED] - if (verifyTextPresent("The FEIN/SSN and Re-type FEIN/SSN do not match", true)): null

2024-03-20 23:02:03 - [MESSAGE][PASSED] - Text 'The FEIN/SSN and Re-type FEIN/SSN do not match' is present on page  using regular expression

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:03 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:02:03 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:02:03 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:02:04 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:02:04 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:02:04 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:02:06 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:02:06 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:02:06 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:02:06 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:08 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:08 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:09 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:09 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:09 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Tax Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:10 - [MESSAGE][PASSED] - All options with label 'PTE Tax Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:10 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:10 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:11 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:11 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 2, CONTINUE_ON_FAILURE): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:02:11 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:02:11 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:11 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:11 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_FeinSsn_New_2"), "RigbBhfdqODKcAsiUrg+1Q=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:02:12 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:02:12 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_RetypeFeinSsn_New_2"), "RigbBhfdqOD+04WBHw5iKw=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:02:12 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:02:12 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:12 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), ""): Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:02:13 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:02:13 - [TEST_STEP][PASSED] - if (verifyTextPresent("The FEIN/SSN and Re-type FEIN/SSN do not match", true)): null

2024-03-20 23:02:14 - [MESSAGE][PASSED] - Text 'The FEIN/SSN and Re-type FEIN/SSN do not match' is present on page  using regular expression

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:14 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/FEINmoreThan9Error-NEW" time="23.745" classname="Test Cases/RAD_TestCases/Negative_TestCases/FEINmoreThan9Error-NEW" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:02:14 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/FEINmoreThan9Error-NEW: Test Cases/RAD_TestCases/Negative_TestCases/FEINmoreThan9Error-NEW

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/FEINmoreThan9Error.xlsx": null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - nameSheet = "Sheet1": null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - dataFile = "RADTestData/FEINmoreThan9Error": null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Paymenttype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:15 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:02:17 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:02:17 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:02:18 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:02:18 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:02:18 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:02:19 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:02:19 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:02:19 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:02:19 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:21 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:02:21 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:22 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:22 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:23 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:23 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:23 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:23 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:23 - [MESSAGE][PASSED] - All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:23 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:24 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:24 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:24 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN"), "RigbBhfdqOBDK95asqKeHw=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:02:25 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:02:25 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN_ReEnter"), ""): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:02:25 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:02:25 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:25 - [TEST_STEP][PASSED] - verifyTextPresent("Please enter a valid FEIN with 9 digits.", true): Text 'Please enter a valid FEIN with 9 digits.' is present on page  using regular expression

2024-03-20 23:02:26 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN with 9 digits.' is present on page  using regular expression

2024-03-20 23:02:26 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid FEIN with 9 digits.", true)): null

2024-03-20 23:02:26 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN with 9 digits.' is present on page  using regular expression

2024-03-20 23:02:26 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:02:26 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:02:26 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:02:26 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:26 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:26 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:26 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:02:27 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:02:27 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:02:28 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:02:28 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:02:28 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:02:29 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:02:29 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:29 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:02:29 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:31 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:31 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:32 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:32 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:32 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:32 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:33 - [MESSAGE][PASSED] - All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:33 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:33 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:34 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:34 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:34 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:34 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN"), "RigbBhfdqOBDK95asqKeHw=="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:02:35 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:02:35 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN_ReEnter"), ""): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:02:35 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:02:35 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:35 - [TEST_STEP][PASSED] - verifyTextPresent("Please enter a valid FEIN with 9 digits.", true): Text 'Please enter a valid FEIN with 9 digits.' is present on page  using regular expression

2024-03-20 23:02:36 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN with 9 digits.' is present on page  using regular expression

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid FEIN with 9 digits.", true)): null

2024-03-20 23:02:36 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN with 9 digits.' is present on page  using regular expression

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:36 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:36 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:37 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:38 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/FEINandFEINSSNlessThan9Error" time="65.465" classname="Test Cases/RAD_TestCases/Negative_TestCases/FEINandFEINSSNlessThan9Error" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:02:38 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/FEINandFEINSSNlessThan9Error: Test Cases/RAD_TestCases/Negative_TestCases/FEINandFEINSSNlessThan9Error

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/FEINandFEINSSNlessThan9Error.xlsx": null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - nameSheet = "Sheet1": null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - dataFile = "RADTestData/FEINandFEINSSNlessThan9Error": null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Paymenttype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - feinSsn = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:39 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:40 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:02:42 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:02:42 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:02:43 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:02:43 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:02:43 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:02:45 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:02:45 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:45 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:02:45 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:47 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:47 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:48 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:48 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:48 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:48 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:49 - [MESSAGE][PASSED] - All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:49 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:50 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:50 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:50 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:50 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): null

2024-03-20 23:02:50 - [TEST_STEP][PASSED] - else: Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:02:50 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN"), "iGDxf8hSRT4="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:02:50 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:02:50 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN_ReEnter"), ""): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:02:51 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:02:51 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:51 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): null

2024-03-20 23:02:51 - [TEST_STEP][PASSED] - else: null

2024-03-20 23:02:51 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid FEIN with 9 digits.", true)): null

2024-03-20 23:02:52 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN with 9 digits.' is present on page  using regular expression

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:52 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:02:52 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:02:52 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:02:53 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:02:53 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:02:53 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:02:54 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:02:54 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:02:54 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:02:54 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:56 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:02:56 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:57 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:02:57 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:58 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:58 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:58 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:58 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:58 - [MESSAGE][PASSED] - All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:02:58 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:02:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:02:59 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:02:59 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:02:59 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:02:59 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): null

2024-03-20 23:02:59 - [TEST_STEP][PASSED] - else: Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:02:59 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN"), "iGDxf8hSRT4="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:03:00 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN'

2024-03-20 23:03:00 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_FederalEIN_ReEnter"), ""): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:03:01 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_FederalEIN_ReEnter'

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - else: null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid FEIN with 9 digits.", true)): null

2024-03-20 23:03:01 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN with 9 digits.' is present on page  using regular expression

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:01 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:03:01 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:03:01 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:03:02 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:03:02 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:03:02 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:03:04 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:03:04 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:03:04 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:03:04 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:06 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:06 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:07 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:07 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:07 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Non-Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:08 - [MESSAGE][PASSED] - All options with label 'PTE Non-Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:08 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:08 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:09 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:09 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:09 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:09 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:09 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_FeinSsn_New_2"), "iGDxf8hSRT4="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:03:10 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:03:10 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_RetypeFeinSsn_New_2"), ""): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:10 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:10 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:10 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): null

2024-03-20 23:03:10 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid FEIN/SSN with 9 digits", true)): null

2024-03-20 23:03:11 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN/SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:11 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:03:11 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:03:11 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:03:12 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:03:12 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:03:12 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:03:14 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:03:14 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:03:14 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:03:14 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:15 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:03:15 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:16 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:17 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:17 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:17 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Non-Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:18 - [MESSAGE][PASSED] - All options with label 'PTE Non-Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:18 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:19 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:19 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:19 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:19 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_FeinSsn_New_2"), "iGDxf8hSRT4="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:03:19 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:03:19 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_RetypeFeinSsn_New_2"), ""): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:20 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:20 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:20 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): null

2024-03-20 23:03:20 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid FEIN/SSN with 9 digits", true)): null

2024-03-20 23:03:21 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN/SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:21 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:03:21 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:03:21 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:03:22 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:03:22 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:03:22 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:03:23 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:03:23 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:03:23 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:03:23 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:25 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:03:25 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:26 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:26 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:27 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:27 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:27 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:27 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Tax Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:27 - [MESSAGE][PASSED] - All options with label 'PTE Tax Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:27 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:27 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:28 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:28 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:28 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:28 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:28 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_FeinSsn_New_2"), "iGDxf8hSRT4="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:03:29 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:03:29 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_RetypeFeinSsn_New_2"), ""): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:29 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:29 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:29 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): null

2024-03-20 23:03:29 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid FEIN/SSN with 9 digits", true)): null

2024-03-20 23:03:30 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN/SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:30 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:03:30 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:03:30 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:03:32 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:03:32 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:03:32 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:03:33 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:03:33 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:03:33 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:03:33 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:35 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_Withholding = "Object Repository/RAD_Pages/Withholding_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_PaymentReady = "Object Repository/RAD_Pages/PaymentReady_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:03:35 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:36 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:37 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:37 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:37 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Tax Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:37 - [MESSAGE][PASSED] - All options with label 'PTE Tax Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:37 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:37 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:38 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:38 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:38 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:38 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:38 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_FeinSsn_New_2"), "iGDxf8hSRT4="): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:03:39 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_FeinSsn_New_2'

2024-03-20 23:03:39 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject(orPath_TaxInfo + "/input_TaxInfo_RetypeFeinSsn_New_2"), ""): Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:39 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/RAD_Pages/TaxInfo_Page/input_TaxInfo_RetypeFeinSsn_New_2'

2024-03-20 23:03:39 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:39 - [TEST_STEP][PASSED] - if (feinSsn.equalsIgnoreCase("Y")): null

2024-03-20 23:03:39 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid FEIN/SSN with 9 digits", true)): null

2024-03-20 23:03:40 - [MESSAGE][PASSED] - Text 'Please enter a valid FEIN/SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - println("Error Message is present on the page"): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:40 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:40 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:41 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:42 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - feinSsn = findTestData(dataFile).getValue("FEINSSN", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/EMailNoMatch" time="91.217" classname="Test Cases/RAD_TestCases/Negative_TestCases/EMailNoMatch" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:03:44 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/EMailNoMatch: Test Cases/RAD_TestCases/Negative_TestCases/EMailNoMatch

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/EmailNoMatch.xlsx": null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - nameSheet = "Sheet1": null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - dataFile = "RADTestData/EmailNoMatch": null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:44 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:03:47 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:03:47 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:03:48 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:03:48 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:03:48 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:03:49 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:03:49 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:03:50 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:03:50 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:50 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:03:50 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:03:50 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:03:50 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:03:50 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:03:50 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:03:50 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:03:50 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:52 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:03:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:53 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:03:53 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:03:53 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:53 - [MESSAGE][PASSED] - All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:03:53 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:03:53 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:03:54 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:03:54 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 3): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:03:55 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:03:55 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), "imtiazster@gmail.com"): Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:03:56 - [MESSAGE][PASSED] - Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:03:56 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), "iahmed@govolution.com"): Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:03:56 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:03:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:03:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:03:58 - [TEST_STEP][PASSED] - if (verifyTextPresent("The Email and Re-enter email do not match", true)): null

2024-03-20 23:03:59 - [MESSAGE][PASSED] - Text 'The Email and Re-enter email do not match' is present on page  using regular expression

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - println("Emails Dont match text is present"): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:59 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:03:59 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:03:59 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:04:00 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:04:00 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:04:00 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:04:01 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:04:01 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:04:02 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:04:02 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:03 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:03 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:04:03 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:04:03 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:04:03 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:04:03 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:04:03 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:04:03 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:04 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:05 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:04:05 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:04:05 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:05 - [MESSAGE][PASSED] - All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:05 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:04:05 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:06 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:06 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 3): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:07 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:07 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), "imtiazster@gmail.com"): Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:08 - [MESSAGE][PASSED] - Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:08 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), "iahmed@govolution.com"): Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:08 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:04:10 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:04:10 - [TEST_STEP][PASSED] - if (verifyTextPresent("The Email and Re-enter email do not match", true)): null

2024-03-20 23:04:11 - [MESSAGE][PASSED] - Text 'The Email and Re-enter email do not match' is present on page  using regular expression

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - println("Emails Dont match text is present"): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:11 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:04:11 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:04:11 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:04:12 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:04:12 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:04:12 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:04:14 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:04:14 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:04:14 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:04:14 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:15 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:15 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:04:15 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:04:15 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:04:15 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:04:15 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:04:15 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:04:15 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:16 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:16 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:17 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:17 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:04:17 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:04:17 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Non-Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:18 - [MESSAGE][PASSED] - All options with label 'PTE Non-Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:18 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:04:18 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:19 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:19 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 3): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:19 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:19 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), "imtiazster@gmail.com"): Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:20 - [MESSAGE][PASSED] - Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:20 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), "iahmed@govolution.com"): Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:21 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:04:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - if (verifyTextPresent("The Email and Re-enter email do not match", true)): null

2024-03-20 23:04:23 - [MESSAGE][PASSED] - Text 'The Email and Re-enter email do not match' is present on page  using regular expression

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - println("Emails Dont match text is present"): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:23 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:04:23 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:04:23 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:04:24 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:04:24 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:04:24 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:04:26 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:04:26 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:04:26 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:04:26 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:28 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:28 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:04:28 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:04:28 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:04:28 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:04:28 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:04:28 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:04:28 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:28 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:28 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:29 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:29 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:04:29 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:04:29 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Non-Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:30 - [MESSAGE][PASSED] - All options with label 'PTE Non-Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:30 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:04:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:31 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:31 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 3): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:31 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:31 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), "imtiazster@gmail.com"): Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:32 - [MESSAGE][PASSED] - Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:32 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), "iahmed@govolution.com"): Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:33 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:33 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:04:35 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - if (verifyTextPresent("The Email and Re-enter email do not match", true)): null

2024-03-20 23:04:35 - [MESSAGE][PASSED] - Text 'The Email and Re-enter email do not match' is present on page  using regular expression

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - println("Emails Dont match text is present"): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:35 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:04:35 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:04:35 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:04:36 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:04:36 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:04:36 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:04:38 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:04:38 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:04:38 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:04:38 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:40 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:40 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:04:40 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:04:40 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:04:40 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:04:40 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:04:40 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:04:40 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:40 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:41 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:41 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:04:41 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:04:41 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Tax Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:42 - [MESSAGE][PASSED] - All options with label 'PTE Tax Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:42 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:04:42 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:43 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:43 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 3): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:43 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:43 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), "imtiazster@gmail.com"): Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:44 - [MESSAGE][PASSED] - Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:44 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), "iahmed@govolution.com"): Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:45 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:04:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - if (verifyTextPresent("The Email and Re-enter email do not match", true)): null

2024-03-20 23:04:47 - [MESSAGE][PASSED] - Text 'The Email and Re-enter email do not match' is present on page  using regular expression

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - println("Emails Dont match text is present"): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:47 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:04:47 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:04:48 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:04:48 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:04:48 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:04:48 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:04:50 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:04:50 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:04:50 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:04:50 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:52 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:04:52 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:04:52 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:04:52 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:04:52 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:04:52 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:04:52 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:04:52 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:52 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:04:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:53 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:04:53 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:04:53 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'PTE Tax Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:54 - [MESSAGE][PASSED] - All options with label 'PTE Tax Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:04:54 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:04:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:04:55 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:04:55 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 3): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:55 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:04:55 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), "imtiazster@gmail.com"): Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:56 - [MESSAGE][PASSED] - Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:04:56 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), "iahmed@govolution.com"): Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:57 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:04:57 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:04:59 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - if (verifyTextPresent("The Email and Re-enter email do not match", true)): null

2024-03-20 23:04:59 - [MESSAGE][PASSED] - Text 'The Email and Re-enter email do not match' is present on page  using regular expression

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - println("Emails Dont match text is present"): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:59 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:04:59 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:04:59 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:05:00 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:05:00 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:05:00 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:05:02 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:05:02 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:05:02 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:05:02 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:05:04 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:05:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:05:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:05:05 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:05:05 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:05:05 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:05:06 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:05:06 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:05:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:05:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:05:07 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 3): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:05:07 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:05:07 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), "imtiazster@gmail.com"): Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:05:08 - [MESSAGE][PASSED] - Text 'imtiazster@gmail.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:05:08 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), "iahmed@govolution.com"): Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:05:09 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:05:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:05:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - if (verifyTextPresent("The Email and Re-enter email do not match", true)): null

2024-03-20 23:05:11 - [MESSAGE][PASSED] - Text 'The Email and Re-enter email do not match' is present on page  using regular expression

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - println("Emails Dont match text is present"): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:05:11 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:11 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:13 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:14 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/TaxPayerSSNNoMatch" time="14.337" classname="Test Cases/RAD_TestCases/Negative_TestCases/TaxPayerSSNNoMatch" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:05:15 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/TaxPayerSSNNoMatch: Test Cases/RAD_TestCases/Negative_TestCases/TaxPayerSSNNoMatch

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/TaxPayerSSNNoMatch.xlsx": null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - nameSheet = "Sheet1": null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - dataFile = "RADTestData/TaxPayerSSNNoMatch": null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:15 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:05:16 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:05:16 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:05:17 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:05:17 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:05:17 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:05:18 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:05:18 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:05:18 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:05:18 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:05:20 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:05:20 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:05:20 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:05:20 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:05:20 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:05:20 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:05:20 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:05:20 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:05:20 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:05:21 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:05:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:05:22 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:05:22 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:05:22 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:05:22 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:05:23 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:05:23 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:05:23 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:05:24 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:05:24 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_TaxPayer + "/input_firstName"), 3): Scroll to object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName' successfully

2024-03-20 23:05:24 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName' successfully

2024-03-20 23:05:24 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:05:24 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:05:24 - [TEST_STEP][PASSED] - setText(findTestObject("RAD_RecordAndPlay/input_concatSSN"), "111111111"): Text '111111111' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:05:24 - [MESSAGE][PASSED] - Text '111111111' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:05:24 - [TEST_STEP][PASSED] - setText(findTestObject("RAD_RecordAndPlay/input_concatReSSN"), "222222222"): Text '222222222' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:05:25 - [MESSAGE][PASSED] - Text '222222222' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:05:25 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_lastName"), "Anderson"): Text 'Anderson' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:05:26 - [MESSAGE][PASSED] - Text 'Anderson' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:05:26 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:05:26 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:05:28 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:05:28 - [TEST_STEP][PASSED] - switch (Taxtype): null

2024-03-20 23:05:28 - [TEST_STEP][PASSED] - Default: null

2024-03-20 23:05:28 - [TEST_STEP][PASSED] - if (verifyTextPresent("The SSN and Re-type SSN do not match", true)): null

2024-03-20 23:05:29 - [MESSAGE][PASSED] - Text 'The SSN and Re-type SSN do not match' is present on page  using regular expression

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - println("Taxpayer SSN Dont match text is present"): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:05:29 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:29 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/SSNmoreThan9Error" time="14.279" classname="Test Cases/RAD_TestCases/Negative_TestCases/SSNmoreThan9Error" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:05:29 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/SSNmoreThan9Error: Test Cases/RAD_TestCases/Negative_TestCases/SSNmoreThan9Error

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/SSNmoreThan9Error.xlsx": null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - nameSheet = "Sheet1": null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - dataFile = "RADTestData/SSNmoreThan9Error": null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:05:30 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:05:30 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:05:31 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:05:31 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:05:31 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:05:34 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:05:34 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:05:34 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:05:34 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:05:36 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:05:36 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:05:37 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:05:37 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:05:37 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:05:37 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:05:38 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:05:38 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:05:38 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:05:39 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:05:39 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_TaxPayer + "/input_firstName"), 3): Scroll to object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName' successfully

2024-03-20 23:05:39 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName' successfully

2024-03-20 23:05:39 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:05:39 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:05:39 - [TEST_STEP][PASSED] - setText(findTestObject("RAD_RecordAndPlay/input_concatSSN"), "1111111111"): Text '1111111111' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:05:40 - [MESSAGE][PASSED] - Text '1111111111' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:05:40 - [TEST_STEP][PASSED] - setText(findTestObject("RAD_RecordAndPlay/input_concatReSSN"), ""): Text '' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:05:41 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:05:41 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:05:41 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:05:43 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - switch (Taxtype): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - Default: null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid SSN with 9 digits", true)): null

2024-03-20 23:05:43 - [MESSAGE][PASSED] - Text 'Please enter a valid SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - println("Please enter a valid SSN with 9 digits"): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:05:43 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:43 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/JointFilerSSNnoMatch-NEW" time="15.043" classname="Test Cases/RAD_TestCases/Negative_TestCases/JointFilerSSNnoMatch-NEW" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:05:44 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/JointFilerSSNnoMatch-NEW: Test Cases/RAD_TestCases/Negative_TestCases/JointFilerSSNnoMatch-NEW

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/JointFilerSSNnoMatch.xlsx": null

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - nameSheet = "Sheet1": null

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - dataFile = "RADTestData/JointFilerSSNnoMatch": null

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:05:44 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:05:45 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:05:45 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:05:46 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:05:46 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:05:46 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:05:47 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:05:47 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:05:47 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:05:47 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:05:49 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:05:49 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:05:49 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:05:49 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:05:49 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:05:49 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:05:49 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:05:49 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:05:49 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:05:50 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:05:50 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:05:51 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:05:51 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:05:51 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:05:51 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:05:52 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:05:52 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:05:52 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:05:53 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:05:53 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 2, CONTINUE_ON_FAILURE): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:05:53 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:05:53 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_FilingStatus + "/input_userType_Joint"), 5): Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_userType_Joint' is clickable

2024-03-20 23:05:53 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_userType_Joint' is clickable

2024-03-20 23:05:53 - [TEST_STEP][PASSED] - click(findTestObject(orPath_FilingStatus + "/input_userType_Joint")): Object: 'Object Repository/RAD_Pages/FilingStatus_Page/input_userType_Joint' is clicked on

2024-03-20 23:05:54 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/FilingStatus_Page/input_userType_Joint' is clicked on

2024-03-20 23:05:54 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/RAD_RecordAndPlay/input_JointFilerSSN"), "111116523"): Text '111116523' is set on object 'Object Repository/RAD_RecordAndPlay/input_JointFilerSSN'

2024-03-20 23:05:54 - [MESSAGE][PASSED] - Text '111116523' is set on object 'Object Repository/RAD_RecordAndPlay/input_JointFilerSSN'

2024-03-20 23:05:54 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/RAD_RecordAndPlay/input_reTypeJointFilerSSN"), "222226523"): Text '222226523' is set on object 'Object Repository/RAD_RecordAndPlay/input_reTypeJointFilerSSN'

2024-03-20 23:05:55 - [MESSAGE][PASSED] - Text '222226523' is set on object 'Object Repository/RAD_RecordAndPlay/input_reTypeJointFilerSSN'

2024-03-20 23:05:55 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), ""): Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:05:56 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:05:56 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:05:58 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:05:58 - [TEST_STEP][PASSED] - if (verifyTextPresent("The SSN and Re-type SSN do not match", true)): null

2024-03-20 23:05:58 - [MESSAGE][PASSED] - Text 'The SSN and Re-type SSN do not match' is present on page  using regular expression

2024-03-20 23:05:58 - [TEST_STEP][PASSED] - println("Joint Filer SSN Dont match text is present"): null

2024-03-20 23:05:58 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:05:58 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:05:58 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:05:59 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Negative_TestCases/JointFilerSSNmoreThan9Error" time="13.298" classname="Test Cases/RAD_TestCases/Negative_TestCases/JointFilerSSNmoreThan9Error" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:05:59 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Negative_TestCases/JointFilerSSNmoreThan9Error: Test Cases/RAD_TestCases/Negative_TestCases/JointFilerSSNmoreThan9Error

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/JointFilerSSNmoreThan9Error.xlsx": null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - nameSheet = "Sheet1": null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - dataFile = "RADTestData/JointFilerSSNmoreThan9Error": null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - Taxtype = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - out.println("Taxtype value is : " + Taxtype): null

2024-03-20 23:05:59 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:05:59 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:06:00 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:06:00 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:06:00 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:06:02 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:06:02 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:06:02 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:06:02 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:06:04 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - orPath_TaxInfo = "Object Repository/RAD_Pages/TaxInfo_Page": null

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), Paymenttype, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:06:04 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:06:04 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:06:05 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:06:05 - [TEST_STEP][PASSED] - switch (Paymenttype): null

2024-03-20 23:06:05 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:06:05 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), Taxtype, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:06:06 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:06:06 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:06:06 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)

2024-03-20 23:06:07 - [MESSAGE][PASSED] - Delayed 1 second(s)

2024-03-20 23:06:07 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Amount + "/input__paymentAmount"), 2, CONTINUE_ON_FAILURE): Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:06:07 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount' successfully

2024-03-20 23:06:07 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_FilingStatus + "/input_userType_Joint"), 5): Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_userType_Joint' is clickable

2024-03-20 23:06:08 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_userType_Joint' is clickable

2024-03-20 23:06:08 - [TEST_STEP][PASSED] - click(findTestObject(orPath_FilingStatus + "/input_userType_Joint")): Object: 'Object Repository/RAD_Pages/FilingStatus_Page/input_userType_Joint' is clicked on

2024-03-20 23:06:08 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/FilingStatus_Page/input_userType_Joint' is clicked on

2024-03-20 23:06:08 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/RAD_RecordAndPlay/input_JointFilerSSN"), "1111165230"): Text '1111165230' is set on object 'Object Repository/RAD_RecordAndPlay/input_JointFilerSSN'

2024-03-20 23:06:09 - [MESSAGE][PASSED] - Text '1111165230' is set on object 'Object Repository/RAD_RecordAndPlay/input_JointFilerSSN'

2024-03-20 23:06:09 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), ""): Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:06:09 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:06:09 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:06:11 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:06:11 - [TEST_STEP][PASSED] - if (verifyTextPresent("Please enter a valid SSN with 9 digits", true)): null

2024-03-20 23:06:12 - [MESSAGE][PASSED] - Text 'Please enter a valid SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - println("Please enter a valid SSN with 9 digits"): null

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - out.println("Pass Record Number: " + row): null

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:06:12 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - Taxtype = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - Paymenttype = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - out.println("Value of Execute is : " + ExecuteTC): null

2024-03-20 23:06:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Summary_TestCases/Personal_Individual_Summary_TC" time="32.868" classname="Test Cases/RAD_TestCases/Summary_TestCases/Personal_Individual_Summary_TC" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:06:12 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Summary_TestCases/Personal_Individual_Summary_TC: Test Cases/RAD_TestCases/Summary_TestCases/Personal_Individual_Summary_TC

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/Summary.xlsx": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - nameSheet = "Personal_IND": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - dataFile = "RADTestData/Summary_Personal_IND": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - TaxType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - PaymentType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - FilingYear = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - PeriodEndingMonth = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - executionProfile = getExecutionProfile(): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:13 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - logInfo("Payment Type: " + PaymentType): Payment Type: Extension Payments

2024-03-20 23:06:14 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: Personal Income Tax

2024-03-20 23:06:14 - [MESSAGE][INFO] - Tax Type: Personal Income Tax

2024-03-20 23:06:14 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:06:14 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:06:15 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:06:15 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:06:15 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:06:16 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:06:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:06:16 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:06:16 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:06:18 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:06:18 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), PaymentType, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:06:19 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:06:19 - [TEST_STEP][PASSED] - switch (PaymentType): null

2024-03-20 23:06:19 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:06:19 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:06:19 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:06:19 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:06:19 - [TEST_STEP][PASSED] - if (!(FilingYear.isEmpty())): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:06:19 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:06:20 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:06:20 - [TEST_STEP][PASSED] - if (TaxType.equalsIgnoreCase("Estate Tax")): null

2024-03-20 23:06:20 - [TEST_STEP][PASSED] - else: rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:06:20 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADssnAndName(): rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:06:21 - [MESSAGE][PASSED] - Text 'Jimmy' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName'

2024-03-20 23:06:21 - [MESSAGE][PASSED] - Text 'Anderson' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:06:22 - [MESSAGE][PASSED] - Text '123451234' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:06:22 - [MESSAGE][PASSED] - Text '123451234' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:06:23 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:06:23 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADAddress(): rad.getSetDataRAD.setDataRADAddress is PASSED

2024-03-20 23:06:23 - [MESSAGE][PASSED] - All options with label 'United States' are selected in object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/select_Country' 

2024-03-20 23:06:24 - [MESSAGE][PASSED] - Text '2508 Mandan Terrace' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:06:25 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:06:25 - [MESSAGE][PASSED] - Text 'Gambrills' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:06:26 - [MESSAGE][PASSED] - All options with label 'Maryland' are selected in object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/select_State' 

2024-03-20 23:06:27 - [MESSAGE][PASSED] - Text '21054' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:06:28 - [MESSAGE][PASSED] - Text '(703) 894-5000' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:06:29 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:06:29 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:06:29 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADAddress is PASSED

2024-03-20 23:06:29 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), "100.00"): Text '100.00' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:06:30 - [MESSAGE][PASSED] - Text '100.00' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:06:30 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress2"), ""): Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:06:31 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:06:31 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Landing + "/button_Continue"), 3): Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:06:31 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:06:31 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_Landing + "/button_Continue"), 5): Object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clickable

2024-03-20 23:06:31 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clickable

2024-03-20 23:06:31 - [TEST_STEP][PASSED] - click(findTestObject(orPath_Landing + "/button_Continue")): Object: 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clicked on

2024-03-20 23:06:32 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clicked on

2024-03-20 23:06:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:06:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:06:34 - [TEST_STEP][PASSED] - verifyTextPresent("Summary", true): Text 'Summary' is present on page  using regular expression

2024-03-20 23:06:34 - [MESSAGE][PASSED] - Text 'Summary' is present on page  using regular expression

2024-03-20 23:06:34 - [TEST_STEP][PASSED] - verifyTextPresent("Review the information below and make any necessary corrections by clicking the", true): Text 'Review the information below and make any necessary corrections by clicking the' is present on page  using regular expression

2024-03-20 23:06:35 - [MESSAGE][PASSED] - Text 'Review the information below and make any necessary corrections by clicking the' is present on page  using regular expression

2024-03-20 23:06:35 - [TEST_STEP][PASSED] - verifyTextPresent("When you are confident that all the information is correct, click the", true): Text 'When you are confident that all the information is correct, click the' is present on page  using regular expression

2024-03-20 23:06:35 - [MESSAGE][PASSED] - Text 'When you are confident that all the information is correct, click the' is present on page  using regular expression

2024-03-20 23:06:35 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Type/Filing Year", true): Text 'Payment Type/Filing Year' is present on page  using regular expression

2024-03-20 23:06:35 - [MESSAGE][PASSED] - Text 'Payment Type/Filing Year' is present on page  using regular expression

2024-03-20 23:06:35 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Type:", true): Text 'Payment Type:' is present on page  using regular expression

2024-03-20 23:06:35 - [MESSAGE][PASSED] - Text 'Payment Type:' is present on page  using regular expression

2024-03-20 23:06:35 - [TEST_STEP][PASSED] - verifyTextPresent(PaymentType, true): Text 'Extension Payments' is present on page  using regular expression

2024-03-20 23:06:36 - [MESSAGE][PASSED] - Text 'Extension Payments' is present on page  using regular expression

2024-03-20 23:06:36 - [TEST_STEP][PASSED] - verifyTextPresent("Filing Year:", true): Text 'Filing Year:' is present on page  using regular expression

2024-03-20 23:06:36 - [MESSAGE][PASSED] - Text 'Filing Year:' is present on page  using regular expression

2024-03-20 23:06:36 - [TEST_STEP][PASSED] - verifyTextPresent(FilingYear, true): Text '2023' is present on page  using regular expression

2024-03-20 23:06:36 - [MESSAGE][PASSED] - Text '2023' is present on page  using regular expression

2024-03-20 23:06:36 - [TEST_STEP][PASSED] - verifyTextPresent("Payer Information", true): Text 'Payer Information' is present on page  using regular expression

2024-03-20 23:06:37 - [MESSAGE][PASSED] - Text 'Payer Information' is present on page  using regular expression

2024-03-20 23:06:37 - [TEST_STEP][PASSED] - verifyTextPresent("Taxpayer Name:", true): Text 'Taxpayer Name:' is present on page  using regular expression

2024-03-20 23:06:37 - [MESSAGE][PASSED] - Text 'Taxpayer Name:' is present on page  using regular expression

2024-03-20 23:06:37 - [TEST_STEP][PASSED] - switch (executionProfile): null

2024-03-20 23:06:37 - [TEST_STEP][PASSED] - case "QA2Profile":: null

2024-03-20 23:06:37 - [TEST_STEP][PASSED] - verifyTextPresent("Jimmy Anderson", true): Text 'Jimmy Anderson' is present on page  using regular expression

2024-03-20 23:06:37 - [MESSAGE][PASSED] - Text 'Jimmy Anderson' is present on page  using regular expression

2024-03-20 23:06:37 - [TEST_STEP][PASSED] - if (TaxType.equalsIgnoreCase("Estate Tax")): null

2024-03-20 23:06:37 - [TEST_STEP][PASSED] - else: Text 'XXXXX1234' is present on page  using regular expression

2024-03-20 23:06:37 - [TEST_STEP][PASSED] - verifyTextPresent("XXXXX1234", true): Text 'XXXXX1234' is present on page  using regular expression

2024-03-20 23:06:38 - [MESSAGE][PASSED] - Text 'XXXXX1234' is present on page  using regular expression

2024-03-20 23:06:38 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:06:38 - [TEST_STEP][PASSED] - verifyTextPresent("Taxpayer Address:", true): Text 'Taxpayer Address:' is present on page  using regular expression

2024-03-20 23:06:38 - [MESSAGE][PASSED] - Text 'Taxpayer Address:' is present on page  using regular expression

2024-03-20 23:06:38 - [TEST_STEP][PASSED] - verifyTextPresent("2508 Mandan Terrace Gambrills Maryland 21054", true): Text '2508 Mandan Terrace Gambrills Maryland 21054' is present on page  using regular expression

2024-03-20 23:06:38 - [MESSAGE][PASSED] - Text '2508 Mandan Terrace Gambrills Maryland 21054' is present on page  using regular expression

2024-03-20 23:06:38 - [TEST_STEP][PASSED] - verifyTextPresent("Email:", true): Text 'Email:' is present on page  using regular expression

2024-03-20 23:06:39 - [MESSAGE][PASSED] - Text 'Email:' is present on page  using regular expression

2024-03-20 23:06:39 - [TEST_STEP][PASSED] - verifyTextPresent("iahmed@govolution.com", true): Text 'iahmed@govolution.com' is present on page  using regular expression

2024-03-20 23:06:39 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is present on page  using regular expression

2024-03-20 23:06:39 - [TEST_STEP][PASSED] - verifyTextPresent("Phone:", true): Text 'Phone:' is present on page  using regular expression

2024-03-20 23:06:39 - [MESSAGE][PASSED] - Text 'Phone:' is present on page  using regular expression

2024-03-20 23:06:39 - [TEST_STEP][PASSED] - verifyTextPresent("(703) 894-5000", false): Text '(703) 894-5000' is present on page 

2024-03-20 23:06:40 - [MESSAGE][PASSED] - Text '(703) 894-5000' is present on page 

2024-03-20 23:06:40 - [TEST_STEP][PASSED] - verifyTextPresent("Tax Information", true): Text 'Tax Information' is present on page  using regular expression

2024-03-20 23:06:40 - [MESSAGE][PASSED] - Text 'Tax Information' is present on page  using regular expression

2024-03-20 23:06:40 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Amount:", true): Text 'Payment Amount:' is present on page  using regular expression

2024-03-20 23:06:40 - [MESSAGE][PASSED] - Text 'Payment Amount:' is present on page  using regular expression

2024-03-20 23:06:40 - [TEST_STEP][PASSED] - verifyTextPresent("100.00", true): Text '100.00' is present on page  using regular expression

2024-03-20 23:06:41 - [MESSAGE][PASSED] - Text '100.00' is present on page  using regular expression

2024-03-20 23:06:41 - [TEST_STEP][PASSED] - verifyTextNotPresent("Federal EIN:", true): Text 'Federal EIN:' is not present on page using regular expression

2024-03-20 23:06:41 - [MESSAGE][PASSED] - Text 'Federal EIN:' is not present on page using regular expression

2024-03-20 23:06:41 - [TEST_STEP][PASSED] - verifyTextNotPresent("FEIN/SSN:", true): Text 'FEIN/SSN:' is not present on page using regular expression

2024-03-20 23:06:41 - [MESSAGE][PASSED] - Text 'FEIN/SSN:' is not present on page using regular expression

2024-03-20 23:06:41 - [TEST_STEP][PASSED] - if (TaxType.equalsIgnoreCase("Estate Tax")): null

2024-03-20 23:06:41 - [TEST_STEP][PASSED] - else: Text 'Taxpayer SSN:' is present on page  using regular expression

2024-03-20 23:06:41 - [TEST_STEP][PASSED] - verifyTextPresent("Taxpayer SSN:", true): Text 'Taxpayer SSN:' is present on page  using regular expression

2024-03-20 23:06:42 - [MESSAGE][PASSED] - Text 'Taxpayer SSN:' is present on page  using regular expression

2024-03-20 23:06:42 - [TEST_STEP][PASSED] - if (verifyElementVisible(findTestObject(orPath_Summary + "/button_Proceed to Payment"))): null

2024-03-20 23:06:42 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is visible

2024-03-20 23:06:42 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:06:42 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:06:42 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:06:42 - [TEST_STEP][PASSED] - click(findTestObject(orPath_Summary + "/button_Proceed to Payment")): Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:06:43 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:06:43 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:44 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/Summary_TestCases/Personal_Joint_Summary_TC" time="38.529" classname="Test Cases/RAD_TestCases/Summary_TestCases/Personal_Joint_Summary_TC" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:06:45 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/Summary_TestCases/Personal_Joint_Summary_TC: Test Cases/RAD_TestCases/Summary_TestCases/Personal_Joint_Summary_TC

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/Summary.xlsx": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - nameSheet = "Personal_JNT": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - dataFile = "RADTestData/Summary_Personal_JNT": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - TaxType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - PaymentType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - FilingYear = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - PeriodEndingMonth = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - executionProfile = getExecutionProfile(): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:45 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - logInfo("Payment Type: " + PaymentType): Payment Type: Extension Payments

2024-03-20 23:06:46 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: Personal Income Tax

2024-03-20 23:06:46 - [MESSAGE][INFO] - Tax Type: Personal Income Tax

2024-03-20 23:06:46 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:06:46 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:06:47 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:06:47 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:06:47 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:06:48 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:06:48 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:06:48 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:06:48 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:06:50 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:06:50 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), PaymentType, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:06:51 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:06:51 - [TEST_STEP][PASSED] - switch (PaymentType): null

2024-03-20 23:06:51 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:06:51 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:06:52 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:06:52 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:06:52 - [TEST_STEP][PASSED] - if (!(FilingYear.isEmpty())): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:06:52 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:06:52 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:06:52 - [TEST_STEP][PASSED] - if (TaxType.equalsIgnoreCase("Estate Tax")): null

2024-03-20 23:06:52 - [TEST_STEP][PASSED] - else: rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:06:52 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADssnAndName(): rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:06:53 - [MESSAGE][PASSED] - Text 'Jimmy' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName'

2024-03-20 23:06:54 - [MESSAGE][PASSED] - Text 'Anderson' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:06:54 - [MESSAGE][PASSED] - Text '123451234' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:06:55 - [MESSAGE][PASSED] - Text '123451234' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:06:55 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:06:55 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADAddress(): rad.getSetDataRAD.setDataRADAddress is PASSED

2024-03-20 23:06:55 - [MESSAGE][PASSED] - All options with label 'United States' are selected in object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/select_Country' 

2024-03-20 23:06:56 - [MESSAGE][PASSED] - Text '2508 Mandan Terrace' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:06:57 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:06:58 - [MESSAGE][PASSED] - Text 'Gambrills' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:06:58 - [MESSAGE][PASSED] - All options with label 'Maryland' are selected in object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/select_State' 

2024-03-20 23:06:59 - [MESSAGE][PASSED] - Text '21054' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:07:00 - [MESSAGE][PASSED] - Text '(703) 894-5000' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:07:01 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:07:02 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:07:02 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADAddress is PASSED

2024-03-20 23:07:02 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Landing + "/button_Continue"), 3): Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:07:02 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:07:02 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_FilingStatus + "/input_JointFiling_userType_New"), 5): Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is clickable

2024-03-20 23:07:02 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is clickable

2024-03-20 23:07:02 - [TEST_STEP][PASSED] - check(findTestObject(orPath_FilingStatus + "/input_JointFiling_userType_New")): Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is checked

2024-03-20 23:07:03 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is checked

2024-03-20 23:07:03 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:07:05 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:07:05 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADssnAndNameJointFiler(): rad.getSetDataRAD.setDataRADssnAndNameJointFiler is PASSED

2024-03-20 23:07:05 - [MESSAGE][PASSED] - Text 'Larsons' is set on object 'Object Repository/RAD_Pages/FilingStatus_Page/input_jointFirstName'

2024-03-20 23:07:06 - [MESSAGE][PASSED] - Text 'Bell' is set on object 'Object Repository/RAD_Pages/FilingStatus_Page/input_jointLastName'

2024-03-20 23:07:07 - [MESSAGE][PASSED] - Text '123459630' is set on object 'Object Repository/RAD_RecordAndPlay/input_JointFilerSSN'

2024-03-20 23:07:07 - [MESSAGE][PASSED] - Text '123459630' is set on object 'Object Repository/RAD_RecordAndPlay/input_reTypeJointFilerSSN'

2024-03-20 23:07:07 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADssnAndNameJointFiler is PASSED

2024-03-20 23:07:07 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), "100.00"): Text '100.00' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:07:08 - [MESSAGE][PASSED] - Text '100.00' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:07:08 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress2"), ""): Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:07:09 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:07:09 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Landing + "/button_Continue"), 3): Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:07:09 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:07:09 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_Landing + "/button_Continue"), 5): Object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clickable

2024-03-20 23:07:09 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clickable

2024-03-20 23:07:09 - [TEST_STEP][PASSED] - click(findTestObject(orPath_Landing + "/button_Continue")): Object: 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clicked on

2024-03-20 23:07:10 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clicked on

2024-03-20 23:07:10 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:07:12 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:07:12 - [TEST_STEP][PASSED] - verifyTextPresent("Summary", true): Text 'Summary' is present on page  using regular expression

2024-03-20 23:07:12 - [MESSAGE][PASSED] - Text 'Summary' is present on page  using regular expression

2024-03-20 23:07:12 - [TEST_STEP][PASSED] - verifyTextPresent("Review the information below and make any necessary corrections by clicking the", true): Text 'Review the information below and make any necessary corrections by clicking the' is present on page  using regular expression

2024-03-20 23:07:12 - [MESSAGE][PASSED] - Text 'Review the information below and make any necessary corrections by clicking the' is present on page  using regular expression

2024-03-20 23:07:12 - [TEST_STEP][PASSED] - verifyTextPresent("When you are confident that all the information is correct, click the", true): Text 'When you are confident that all the information is correct, click the' is present on page  using regular expression

2024-03-20 23:07:13 - [MESSAGE][PASSED] - Text 'When you are confident that all the information is correct, click the' is present on page  using regular expression

2024-03-20 23:07:13 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Type/Filing Year", true): Text 'Payment Type/Filing Year' is present on page  using regular expression

2024-03-20 23:07:13 - [MESSAGE][PASSED] - Text 'Payment Type/Filing Year' is present on page  using regular expression

2024-03-20 23:07:13 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Type:", true): Text 'Payment Type:' is present on page  using regular expression

2024-03-20 23:07:13 - [MESSAGE][PASSED] - Text 'Payment Type:' is present on page  using regular expression

2024-03-20 23:07:13 - [TEST_STEP][PASSED] - verifyTextPresent(PaymentType, true): Text 'Extension Payments' is present on page  using regular expression

2024-03-20 23:07:14 - [MESSAGE][PASSED] - Text 'Extension Payments' is present on page  using regular expression

2024-03-20 23:07:14 - [TEST_STEP][PASSED] - verifyTextPresent("Filing Year:", true): Text 'Filing Year:' is present on page  using regular expression

2024-03-20 23:07:14 - [MESSAGE][PASSED] - Text 'Filing Year:' is present on page  using regular expression

2024-03-20 23:07:14 - [TEST_STEP][PASSED] - verifyTextPresent(FilingYear, true): Text '2023' is present on page  using regular expression

2024-03-20 23:07:14 - [MESSAGE][PASSED] - Text '2023' is present on page  using regular expression

2024-03-20 23:07:14 - [TEST_STEP][PASSED] - verifyTextPresent("Payer Information", true): Text 'Payer Information' is present on page  using regular expression

2024-03-20 23:07:15 - [MESSAGE][PASSED] - Text 'Payer Information' is present on page  using regular expression

2024-03-20 23:07:15 - [TEST_STEP][PASSED] - verifyTextPresent("Taxpayer Name:", true): Text 'Taxpayer Name:' is present on page  using regular expression

2024-03-20 23:07:15 - [MESSAGE][PASSED] - Text 'Taxpayer Name:' is present on page  using regular expression

2024-03-20 23:07:15 - [TEST_STEP][PASSED] - switch (executionProfile): null

2024-03-20 23:07:15 - [TEST_STEP][PASSED] - case "QA2Profile":: null

2024-03-20 23:07:15 - [TEST_STEP][PASSED] - verifyTextPresent("Jimmy Anderson", true): Text 'Jimmy Anderson' is present on page  using regular expression

2024-03-20 23:07:15 - [MESSAGE][PASSED] - Text 'Jimmy Anderson' is present on page  using regular expression

2024-03-20 23:07:15 - [TEST_STEP][PASSED] - verifyTextPresent("Larsons Bell", true): Text 'Larsons Bell' is present on page  using regular expression

2024-03-20 23:07:16 - [MESSAGE][PASSED] - Text 'Larsons Bell' is present on page  using regular expression

2024-03-20 23:07:16 - [TEST_STEP][PASSED] - verifyTextPresent("XXXXX1234", true): Text 'XXXXX1234' is present on page  using regular expression

2024-03-20 23:07:16 - [MESSAGE][PASSED] - Text 'XXXXX1234' is present on page  using regular expression

2024-03-20 23:07:16 - [TEST_STEP][PASSED] - verifyTextPresent("XXXXX9630", true): Text 'XXXXX9630' is present on page  using regular expression

2024-03-20 23:07:16 - [MESSAGE][PASSED] - Text 'XXXXX9630' is present on page  using regular expression

2024-03-20 23:07:16 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:07:16 - [TEST_STEP][PASSED] - verifyTextPresent("Taxpayer SSN:", true): Text 'Taxpayer SSN:' is present on page  using regular expression

2024-03-20 23:07:17 - [MESSAGE][PASSED] - Text 'Taxpayer SSN:' is present on page  using regular expression

2024-03-20 23:07:17 - [TEST_STEP][PASSED] - verifyTextPresent("Taxpayer Address:", true): Text 'Taxpayer Address:' is present on page  using regular expression

2024-03-20 23:07:17 - [MESSAGE][PASSED] - Text 'Taxpayer Address:' is present on page  using regular expression

2024-03-20 23:07:17 - [TEST_STEP][PASSED] - verifyTextPresent("2508 Mandan Terrace Gambrills Maryland 21054", true): Text '2508 Mandan Terrace Gambrills Maryland 21054' is present on page  using regular expression

2024-03-20 23:07:17 - [MESSAGE][PASSED] - Text '2508 Mandan Terrace Gambrills Maryland 21054' is present on page  using regular expression

2024-03-20 23:07:17 - [TEST_STEP][PASSED] - verifyTextPresent("Email:", true): Text 'Email:' is present on page  using regular expression

2024-03-20 23:07:18 - [MESSAGE][PASSED] - Text 'Email:' is present on page  using regular expression

2024-03-20 23:07:18 - [TEST_STEP][PASSED] - verifyTextPresent("iahmed@govolution.com", true): Text 'iahmed@govolution.com' is present on page  using regular expression

2024-03-20 23:07:18 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is present on page  using regular expression

2024-03-20 23:07:18 - [TEST_STEP][PASSED] - verifyTextPresent("Phone:", true): Text 'Phone:' is present on page  using regular expression

2024-03-20 23:07:18 - [MESSAGE][PASSED] - Text 'Phone:' is present on page  using regular expression

2024-03-20 23:07:18 - [TEST_STEP][PASSED] - verifyTextPresent("(703) 894-5000", false): Text '(703) 894-5000' is present on page 

2024-03-20 23:07:19 - [MESSAGE][PASSED] - Text '(703) 894-5000' is present on page 

2024-03-20 23:07:19 - [TEST_STEP][PASSED] - verifyTextPresent("Joint Filer Name:", true): Text 'Joint Filer Name:' is present on page  using regular expression

2024-03-20 23:07:19 - [MESSAGE][PASSED] - Text 'Joint Filer Name:' is present on page  using regular expression

2024-03-20 23:07:19 - [TEST_STEP][PASSED] - verifyTextPresent("Joint Filer SSN", true): Text 'Joint Filer SSN' is present on page  using regular expression

2024-03-20 23:07:19 - [MESSAGE][PASSED] - Text 'Joint Filer SSN' is present on page  using regular expression

2024-03-20 23:07:19 - [TEST_STEP][PASSED] - verifyTextPresent("Tax Information", true): Text 'Tax Information' is present on page  using regular expression

2024-03-20 23:07:20 - [MESSAGE][PASSED] - Text 'Tax Information' is present on page  using regular expression

2024-03-20 23:07:20 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Amount:", true): Text 'Payment Amount:' is present on page  using regular expression

2024-03-20 23:07:20 - [MESSAGE][PASSED] - Text 'Payment Amount:' is present on page  using regular expression

2024-03-20 23:07:20 - [TEST_STEP][PASSED] - verifyTextPresent("100.00", true): Text '100.00' is present on page  using regular expression

2024-03-20 23:07:20 - [MESSAGE][PASSED] - Text '100.00' is present on page  using regular expression

2024-03-20 23:07:20 - [TEST_STEP][PASSED] - verifyTextNotPresent("Federal EIN:", true): Text 'Federal EIN:' is not present on page using regular expression

2024-03-20 23:07:21 - [MESSAGE][PASSED] - Text 'Federal EIN:' is not present on page using regular expression

2024-03-20 23:07:21 - [TEST_STEP][PASSED] - verifyTextNotPresent("FEIN/SSN:", true): Text 'FEIN/SSN:' is not present on page using regular expression

2024-03-20 23:07:21 - [MESSAGE][PASSED] - Text 'FEIN/SSN:' is not present on page using regular expression

2024-03-20 23:07:21 - [TEST_STEP][PASSED] - if (verifyElementVisible(findTestObject(orPath_Summary + "/button_Proceed to Payment"))): null

2024-03-20 23:07:21 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is visible

2024-03-20 23:07:21 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:07:21 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:07:21 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:07:21 - [TEST_STEP][PASSED] - click(findTestObject(orPath_Summary + "/button_Proceed to Payment")): Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:07:23 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:07:23 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC" time="49.487" classname="Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC" status="FAILED">
         <failure type="FAILED" message="Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	... 23 more
"/>
         <system-out><![CDATA[2024-03-20 23:07:23 - [TEST_CASE][FAILED] - Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC: Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	... 23 more


2024-03-20 23:07:24 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/BeforePayments.xlsx": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - nameSheet = "Personal_IND": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - dataFile = "RADTestData/BeforePayments_Personal_IND": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - TaxType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - PaymentType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - FilingYear = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - PeriodEndingMonth = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - executionProfile = getExecutionProfile(): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - execProfile = getExecutionProfile(): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - logInfo("Payment Type: " + PaymentType): Payment Type: Extension Payments

2024-03-20 23:07:24 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: Personal Income Tax

2024-03-20 23:07:24 - [MESSAGE][INFO] - Tax Type: Personal Income Tax

2024-03-20 23:07:24 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:07:24 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:07:26 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:07:26 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:07:26 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:07:27 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:07:27 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:07:27 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:07:27 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:07:27 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:07:27 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), PaymentType, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:07:29 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:07:29 - [TEST_STEP][PASSED] - switch (PaymentType): null

2024-03-20 23:07:29 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:07:29 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:07:30 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:07:30 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:07:30 - [TEST_STEP][PASSED] - if (!(FilingYear.isEmpty())): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:07:30 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:07:31 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:07:31 - [TEST_STEP][PASSED] - if (TaxType.equalsIgnoreCase("Estate Tax")): null

2024-03-20 23:07:31 - [TEST_STEP][PASSED] - else: rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:07:31 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADssnAndName(): rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:07:31 - [MESSAGE][PASSED] - Text 'Jimmy' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName'

2024-03-20 23:07:32 - [MESSAGE][PASSED] - Text 'Anderson' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:07:33 - [MESSAGE][PASSED] - Text '123451234' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:07:33 - [MESSAGE][PASSED] - Text '123451234' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:07:33 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:07:33 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADAddress(): rad.getSetDataRAD.setDataRADAddress is PASSED

2024-03-20 23:07:34 - [MESSAGE][PASSED] - All options with label 'United States' are selected in object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/select_Country' 

2024-03-20 23:07:35 - [MESSAGE][PASSED] - Text '2508 Mandan Terrace' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:07:35 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:07:36 - [MESSAGE][PASSED] - Text 'Gambrills' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:07:37 - [MESSAGE][PASSED] - All options with label 'Maryland' are selected in object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/select_State' 

2024-03-20 23:07:38 - [MESSAGE][PASSED] - Text '21054' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:07:38 - [MESSAGE][PASSED] - Text '(703) 894-5000' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:07:39 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:07:40 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:07:40 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADAddress is PASSED

2024-03-20 23:07:40 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), "10.00"): Text '10.00' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:07:41 - [MESSAGE][PASSED] - Text '10.00' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:07:41 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress2"), ""): Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:07:42 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:07:42 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Landing + "/button_Continue"), 3): Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:07:42 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:07:42 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_Landing + "/button_Continue"), 5): Object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clickable

2024-03-20 23:07:42 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clickable

2024-03-20 23:07:42 - [TEST_STEP][PASSED] - click(findTestObject(orPath_Landing + "/button_Continue")): Object: 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clicked on

2024-03-20 23:07:43 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clicked on

2024-03-20 23:07:43 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:07:45 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:07:45 - [TEST_STEP][PASSED] - click(findTestObject(orPath_Summary + "/button_Proceed to Payment")): Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:07:46 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:07:46 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName"), 30)): null

2024-03-20 23:07:46 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName' is present

2024-03-20 23:07:46 - [TEST_STEP][PASSED] - verifyTextPresent("Comptroller of Maryland", true): Text 'Comptroller of Maryland' is present on page  using regular expression

2024-03-20 23:07:47 - [MESSAGE][PASSED] - Text 'Comptroller of Maryland' is present on page  using regular expression

2024-03-20 23:07:47 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Information", true): Text 'Payment Information' is present on page  using regular expression

2024-03-20 23:07:47 - [MESSAGE][PASSED] - Text 'Payment Information' is present on page  using regular expression

2024-03-20 23:07:47 - [TEST_STEP][PASSED] - card_Name = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName' is: 'Jimmy Anderson'

2024-03-20 23:07:47 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName' is: 'Jimmy Anderson'

2024-03-20 23:07:47 - [TEST_STEP][PASSED] - switch (executionProfile): null

2024-03-20 23:07:47 - [TEST_STEP][PASSED] - case "QA2Profile":: null

2024-03-20 23:07:47 - [TEST_STEP][PASSED] - verifyMatch("Jimmy Anderson", card_Name, false): Actual text 'Jimmy Anderson' and expected text 'Jimmy Anderson' are matched 

2024-03-20 23:07:47 - [MESSAGE][PASSED] - Actual text 'Jimmy Anderson' and expected text 'Jimmy Anderson' are matched 

2024-03-20 23:07:47 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:07:47 - [TEST_STEP][PASSED] - AL1 = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress' is: '2508 Mandan Terrace'

2024-03-20 23:07:48 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress' is: '2508 Mandan Terrace'

2024-03-20 23:07:48 - [TEST_STEP][PASSED] - verifyMatch("2508 Mandan Terrace", AL1, false): Actual text '2508 Mandan Terrace' and expected text '2508 Mandan Terrace' are matched 

2024-03-20 23:07:48 - [MESSAGE][PASSED] - Actual text '2508 Mandan Terrace' and expected text '2508 Mandan Terrace' are matched 

2024-03-20 23:07:48 - [TEST_STEP][PASSED] - AL2 = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress2"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress2' is: ''

2024-03-20 23:07:48 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress2' is: ''

2024-03-20 23:07:48 - [TEST_STEP][PASSED] - verifyMatch("", AL2, false): Actual text '' and expected text '' are matched 

2024-03-20 23:07:48 - [MESSAGE][PASSED] - Actual text '' and expected text '' are matched 

2024-03-20 23:07:48 - [TEST_STEP][PASSED] - zipCode = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_billingZip"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingZip' is: '21054'

2024-03-20 23:07:48 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingZip' is: '21054'

2024-03-20 23:07:48 - [TEST_STEP][PASSED] - verifyMatch("21054", zipCode, false): Actual text '21054' and expected text '21054' are matched 

2024-03-20 23:07:48 - [MESSAGE][PASSED] - Actual text '21054' and expected text '21054' are matched 

2024-03-20 23:07:48 - [TEST_STEP][PASSED] - city = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_billingCity"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingCity' is: 'GAMBRILLS'

2024-03-20 23:07:49 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingCity' is: 'GAMBRILLS'

2024-03-20 23:07:49 - [TEST_STEP][PASSED] - verifyMatch("GAMBRILLS", city, false): Actual text 'GAMBRILLS' and expected text 'GAMBRILLS' are matched 

2024-03-20 23:07:49 - [MESSAGE][PASSED] - Actual text 'GAMBRILLS' and expected text 'GAMBRILLS' are matched 

2024-03-20 23:07:49 - [TEST_STEP][PASSED] - email = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_emailAddress"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_emailAddress' is: 'iahmed@govolution.com'

2024-03-20 23:07:49 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_emailAddress' is: 'iahmed@govolution.com'

2024-03-20 23:07:49 - [TEST_STEP][PASSED] - verifyMatch("iahmed@govolution.com", email, false): Actual text 'iahmed@govolution.com' and expected text 'iahmed@govolution.com' are matched 

2024-03-20 23:07:49 - [MESSAGE][PASSED] - Actual text 'iahmed@govolution.com' and expected text 'iahmed@govolution.com' are matched 

2024-03-20 23:07:49 - [TEST_STEP][PASSED] - amount = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_amount"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_amount' is: '10.00'

2024-03-20 23:07:49 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_amount' is: '10.00'

2024-03-20 23:07:49 - [TEST_STEP][PASSED] - verifyMatch("10.00", amount, false): Actual text '10.00' and expected text '10.00' are matched 

2024-03-20 23:07:49 - [MESSAGE][PASSED] - Actual text '10.00' and expected text '10.00' are matched 

2024-03-20 23:07:49 - [TEST_STEP][PASSED] - amountReadOnly = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_amount"), "readonly"): Attribute 'readonly' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_amount' is: 'true'

2024-03-20 23:07:49 - [MESSAGE][PASSED] - Attribute 'readonly' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_amount' is: 'true'

2024-03-20 23:07:49 - [TEST_STEP][PASSED] - verifyMatch("true", amountReadOnly, false): Actual text 'true' and expected text 'true' are matched 

2024-03-20 23:07:49 - [MESSAGE][PASSED] - Actual text 'true' and expected text 'true' are matched 

2024-03-20 23:07:49 - [TEST_STEP][PASSED] - verifyOptionSelectedByLabel(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/select_Country"), "United States", false, 20): All options with label 'United States' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_Country' 

2024-03-20 23:07:51 - [MESSAGE][PASSED] - All options with label 'United States' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_Country' 

2024-03-20 23:07:51 - [TEST_STEP][PASSED] - verifyOptionSelectedByLabel(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/select_State"), "Maryland", false, 20): All options with label 'Maryland' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_State' 

2024-03-20 23:07:53 - [MESSAGE][PASSED] - All options with label 'Maryland' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_State' 

2024-03-20 23:07:53 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_PaymentEntry + "/input__cardNumber"), "4111111111111111"): Text '4111111111111111' is set on object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__cardNumber'

2024-03-20 23:07:54 - [MESSAGE][PASSED] - Text '4111111111111111' is set on object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__cardNumber'

2024-03-20 23:07:54 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_PaymentEntry + "/input__spc"), "123"): Text '123' is set on object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__spc'

2024-03-20 23:07:54 - [MESSAGE][PASSED] - Text '123' is set on object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__spc'

2024-03-20 23:07:54 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_PaymentEntry + "/select_MM"), "12", false): All options with label '12' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_MM' 

2024-03-20 23:07:55 - [MESSAGE][PASSED] - All options with label '12' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_MM' 

2024-03-20 23:07:55 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_PaymentEntry + "/select_YYYY"), "2028", false): All options with label '2028' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_YYYY' 

2024-03-20 23:07:55 - [MESSAGE][PASSED] - All options with label '2028' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_YYYY' 

2024-03-20 23:07:55 - [TEST_STEP][PASSED] - click(findTestObject(orPath_PaymentEntry + "/input_Field_ccSubmit")): Object: 'Object Repository/RAD_Pages/PaymentEntry_Page/input_Field_ccSubmit' is clicked on

2024-03-20 23:07:57 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/PaymentEntry_Page/input_Field_ccSubmit' is clicked on

2024-03-20 23:07:57 - [TEST_STEP][PASSED] - click(findTestObject(orPath_PaymentConfirmation + "/input_N_confirmNotifyAction")): Object: 'Object Repository/RAD_Pages/PaymentConfirmation_Page/input_N_confirmNotifyAction' is clicked on

2024-03-20 23:07:58 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/PaymentConfirmation_Page/input_N_confirmNotifyAction' is clicked on

2024-03-20 23:07:58 - [TEST_STEP][PASSED] - verifyTextPresent("Service Fee Acceptance", true): Text 'Service Fee Acceptance' is present on page  using regular expression

2024-03-20 23:07:58 - [MESSAGE][PASSED] - Text 'Service Fee Acceptance' is present on page  using regular expression

2024-03-20 23:07:58 - [TEST_STEP][PASSED] - verifyTextPresent("This transaction is subject to a Service Fee of ", true): Text 'This transaction is subject to a Service Fee of ' is present on page  using regular expression

2024-03-20 23:07:58 - [MESSAGE][PASSED] - Text 'This transaction is subject to a Service Fee of ' is present on page  using regular expression

2024-03-20 23:07:58 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Amount:", true): Text 'Payment Amount:' is present on page  using regular expression

2024-03-20 23:07:59 - [MESSAGE][PASSED] - Text 'Payment Amount:' is present on page  using regular expression

2024-03-20 23:07:59 - [TEST_STEP][PASSED] - verifyTextPresent("10.00", true): Text '10.00' is present on page  using regular expression

2024-03-20 23:07:59 - [MESSAGE][PASSED] - Text '10.00' is present on page  using regular expression

2024-03-20 23:07:59 - [TEST_STEP][PASSED] - verifyTextPresent("Service Fee:", true): Text 'Service Fee:' is present on page  using regular expression

2024-03-20 23:07:59 - [MESSAGE][PASSED] - Text 'Service Fee:' is present on page  using regular expression

2024-03-20 23:07:59 - [TEST_STEP][FAILED] - verifyTextPresent("1.00", true): Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)

2024-03-20 23:07:59 - [MESSAGE][FAILED] - Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)

2024-03-20 23:07:59 - [TEST_STEP][PASSED] - verifyTextPresent("Total Amount:", true): Text 'Total Amount:' is present on page  using regular expression

2024-03-20 23:08:00 - [MESSAGE][PASSED] - Text 'Total Amount:' is present on page  using regular expression

2024-03-20 23:08:00 - [TEST_STEP][FAILED] - verifyTextPresent("11.00", true): Text '11.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '11.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:278)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)

2024-03-20 23:08:00 - [MESSAGE][FAILED] - Text '11.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '11.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:278)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)

2024-03-20 23:08:00 - [TEST_STEP][PASSED] - verifyTextPresent("Two transactions will appear on your bank statement, one in the amount of", true): Text 'Two transactions will appear on your bank statement, one in the amount of' is present on page  using regular expression

2024-03-20 23:08:00 - [MESSAGE][PASSED] - Text 'Two transactions will appear on your bank statement, one in the amount of' is present on page  using regular expression

2024-03-20 23:08:00 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject(orPath_ServiceFeesAccept + "/input_convFeeNotifyAction"), 30)): null

2024-03-20 23:08:01 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/ServiceFeeAccept_Page/input_convFeeNotifyAction' is present

2024-03-20 23:08:01 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:08:01 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:08:01 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:08:01 - [TEST_STEP][PASSED] - if (execProfile == "QAProfile" || execProfile == "QA2Profile"): Text 'Successful Payment Receipt' is present on page  using regular expression

2024-03-20 23:08:01 - [TEST_STEP][PASSED] - click(findTestObject(orPath_ServiceFeesAccept + "/input_convFeeNotifyAction")): Object: 'Object Repository/RAD_Pages/ServiceFeeAccept_Page/input_convFeeNotifyAction' is clicked on

2024-03-20 23:08:01 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/ServiceFeeAccept_Page/input_convFeeNotifyAction' is clicked on

2024-03-20 23:08:01 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2024-03-20 23:08:11 - [MESSAGE][PASSED] - Delayed 10 second(s)

2024-03-20 23:08:11 - [TEST_STEP][PASSED] - verifyTextPresent("Successful Payment Receipt", true): Text 'Successful Payment Receipt' is present on page  using regular expression

2024-03-20 23:08:12 - [MESSAGE][PASSED] - Text 'Successful Payment Receipt' is present on page  using regular expression

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:08:12 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[2024-03-20 23:07:23 - [TEST_CASE][FAILED] - Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC: Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	... 23 more]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Joint_BeforePayments_TC" time="55.244" classname="Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Joint_BeforePayments_TC" status="FAILED">
         <failure type="FAILED" message="Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Joint_BeforePayments_TC FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear'  (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Script1694739459213.run(Script1694739459213.groovy:120)
	... 13 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	... 21 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	... 19 more
"/>
         <system-out><![CDATA[2024-03-20 23:08:13 - [TEST_CASE][FAILED] - Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Joint_BeforePayments_TC: Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Joint_BeforePayments_TC FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear'  (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Script1694739459213.run(Script1694739459213.groovy:120)
	... 13 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	... 21 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	... 19 more


2024-03-20 23:08:13 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/BeforePayments.xlsx": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - nameSheet = "Personal_JNT": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - dataFile = "RADTestData/BeforePayments_Personal_JNT": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - TaxType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - PaymentType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - FilingYear = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - PeriodEndingMonth = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - executionProfile = getExecutionProfile(): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - execProfile = getExecutionProfile(): null

2024-03-20 23:08:13 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:08:14 - [TEST_STEP][FAILED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:08:14 - [TEST_STEP][FAILED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - logInfo("Payment Type: " + PaymentType): Payment Type: Extension Payments

2024-03-20 23:08:14 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: Personal Income Tax

2024-03-20 23:08:14 - [MESSAGE][INFO] - Tax Type: Personal Income Tax

2024-03-20 23:08:14 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:08:14 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:08:15 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:08:15 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:08:15 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:08:16 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:08:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:08:17 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:08:17 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:08:19 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:08:19 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), PaymentType, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:08:19 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:08:19 - [TEST_STEP][PASSED] - switch (PaymentType): null

2024-03-20 23:08:19 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:08:19 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:08:20 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:08:20 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:08:20 - [TEST_STEP][FAILED] - if (!(FilingYear.isEmpty())): Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear'  (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Script1694739459213.run(Script1694739459213.groovy:120)
	... 13 more
)

2024-03-20 23:08:20 - [TEST_STEP][FAILED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear'  (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Script1694739459213.run(Script1694739459213.groovy:120)
	... 13 more
)

2024-03-20 23:08:21 - [MESSAGE][FAILED] - Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear'  (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Script1694739459213.run(Script1694739459213.groovy:120)
	... 13 more
)
[[ATTACHMENT|E:\\Cloned-Project-Katalon\\VPS-Katalon\\Reports\\20240320_230049\\RAD_TestSuite\\RAD_UI_TestSuite\\20240320_230049\\1710990501244.png]]

2024-03-20 23:08:21 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADssnAndName(): rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:08:22 - [MESSAGE][PASSED] - Text 'Jimmy' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName'

2024-03-20 23:08:22 - [MESSAGE][PASSED] - Text 'Anderson' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:08:23 - [MESSAGE][PASSED] - Text '123451234' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:08:23 - [MESSAGE][PASSED] - Text '123451234' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:08:23 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADssnAndName is PASSED

2024-03-20 23:08:23 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADAddress(): rad.getSetDataRAD.setDataRADAddress is PASSED

2024-03-20 23:08:24 - [MESSAGE][PASSED] - All options with label 'United States' are selected in object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/select_Country' 

2024-03-20 23:08:25 - [MESSAGE][PASSED] - Text '2508 Mandan Terrace' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:08:26 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:08:26 - [MESSAGE][PASSED] - Text 'Gambrills' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:08:27 - [MESSAGE][PASSED] - All options with label 'Maryland' are selected in object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/select_State' 

2024-03-20 23:08:28 - [MESSAGE][PASSED] - Text '21054' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:08:29 - [MESSAGE][PASSED] - Text '(703) 894-5000' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:08:30 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:08:30 - [MESSAGE][PASSED] - Text 'iahmed@govolution.com' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:08:30 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADAddress is PASSED

2024-03-20 23:08:30 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Landing + "/button_Continue"), 3): Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:08:31 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:08:31 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_FilingStatus + "/input_JointFiling_userType_New"), 5): Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is clickable

2024-03-20 23:08:31 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is clickable

2024-03-20 23:08:31 - [TEST_STEP][PASSED] - check(findTestObject(orPath_FilingStatus + "/input_JointFiling_userType_New")): Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is checked

2024-03-20 23:08:32 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is checked

2024-03-20 23:08:32 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:08:34 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:08:34 - [TEST_STEP][PASSED] - rad.getSetDataRAD.setDataRADssnAndNameJointFiler(): rad.getSetDataRAD.setDataRADssnAndNameJointFiler is PASSED

2024-03-20 23:08:34 - [MESSAGE][PASSED] - Text 'Larsons' is set on object 'Object Repository/RAD_Pages/FilingStatus_Page/input_jointFirstName'

2024-03-20 23:08:35 - [MESSAGE][PASSED] - Text 'Bell' is set on object 'Object Repository/RAD_Pages/FilingStatus_Page/input_jointLastName'

2024-03-20 23:08:35 - [MESSAGE][PASSED] - Text '123459630' is set on object 'Object Repository/RAD_RecordAndPlay/input_JointFilerSSN'

2024-03-20 23:08:36 - [MESSAGE][PASSED] - Text '123459630' is set on object 'Object Repository/RAD_RecordAndPlay/input_reTypeJointFilerSSN'

2024-03-20 23:08:36 - [MESSAGE][PASSED] - rad.getSetDataRAD.setDataRADssnAndNameJointFiler is PASSED

2024-03-20 23:08:36 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_Amount + "/input__paymentAmount"), "10.00"): Text '10.00' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:08:37 - [MESSAGE][PASSED] - Text '10.00' is set on object 'Object Repository/RAD_Pages/PaymentAmount_Page/input__paymentAmount'

2024-03-20 23:08:37 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress2"), ""): Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:08:38 - [MESSAGE][PASSED] - Text '' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress2'

2024-03-20 23:08:38 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Landing + "/button_Continue"), 3): Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:08:38 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:08:38 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_Landing + "/button_Continue"), 5): Object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clickable

2024-03-20 23:08:38 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clickable

2024-03-20 23:08:38 - [TEST_STEP][PASSED] - click(findTestObject(orPath_Landing + "/button_Continue")): Object: 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clicked on

2024-03-20 23:08:39 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/Landing_Page/button_Continue' is clicked on

2024-03-20 23:08:39 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:08:41 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:08:41 - [TEST_STEP][PASSED] - click(findTestObject(orPath_Summary + "/button_Proceed to Payment")): Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:08:42 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/Summary_Page/button_Proceed to Payment' is clicked on

2024-03-20 23:08:42 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName"), 30)): null

2024-03-20 23:08:42 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName' is present

2024-03-20 23:08:42 - [TEST_STEP][PASSED] - verifyTextPresent("Comptroller of Maryland", true): Text 'Comptroller of Maryland' is present on page  using regular expression

2024-03-20 23:08:43 - [MESSAGE][PASSED] - Text 'Comptroller of Maryland' is present on page  using regular expression

2024-03-20 23:08:43 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Information", true): Text 'Payment Information' is present on page  using regular expression

2024-03-20 23:08:43 - [MESSAGE][PASSED] - Text 'Payment Information' is present on page  using regular expression

2024-03-20 23:08:43 - [TEST_STEP][PASSED] - card_Name = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName' is: 'Jimmy Anderson'

2024-03-20 23:08:43 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__billingName' is: 'Jimmy Anderson'

2024-03-20 23:08:43 - [TEST_STEP][PASSED] - switch (executionProfile): null

2024-03-20 23:08:43 - [TEST_STEP][PASSED] - case "QA2Profile":: null

2024-03-20 23:08:43 - [TEST_STEP][PASSED] - verifyMatch("Jimmy Anderson", card_Name, false): Actual text 'Jimmy Anderson' and expected text 'Jimmy Anderson' are matched 

2024-03-20 23:08:43 - [MESSAGE][PASSED] - Actual text 'Jimmy Anderson' and expected text 'Jimmy Anderson' are matched 

2024-03-20 23:08:43 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:08:43 - [TEST_STEP][PASSED] - AL1 = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress' is: '2508 Mandan Terrace'

2024-03-20 23:08:44 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress' is: '2508 Mandan Terrace'

2024-03-20 23:08:44 - [TEST_STEP][PASSED] - verifyMatch("2508 Mandan Terrace", AL1, false): Actual text '2508 Mandan Terrace' and expected text '2508 Mandan Terrace' are matched 

2024-03-20 23:08:44 - [MESSAGE][PASSED] - Actual text '2508 Mandan Terrace' and expected text '2508 Mandan Terrace' are matched 

2024-03-20 23:08:44 - [TEST_STEP][PASSED] - AL2 = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress2"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress2' is: ''

2024-03-20 23:08:44 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingAddress2' is: ''

2024-03-20 23:08:44 - [TEST_STEP][PASSED] - verifyMatch("", AL2, false): Actual text '' and expected text '' are matched 

2024-03-20 23:08:44 - [MESSAGE][PASSED] - Actual text '' and expected text '' are matched 

2024-03-20 23:08:44 - [TEST_STEP][PASSED] - zipCode = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_billingZip"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingZip' is: '21054'

2024-03-20 23:08:44 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingZip' is: '21054'

2024-03-20 23:08:44 - [TEST_STEP][PASSED] - verifyMatch("21054", zipCode, false): Actual text '21054' and expected text '21054' are matched 

2024-03-20 23:08:44 - [MESSAGE][PASSED] - Actual text '21054' and expected text '21054' are matched 

2024-03-20 23:08:44 - [TEST_STEP][PASSED] - city = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_billingCity"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingCity' is: 'GAMBRILLS'

2024-03-20 23:08:44 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_billingCity' is: 'GAMBRILLS'

2024-03-20 23:08:44 - [TEST_STEP][PASSED] - verifyMatch("GAMBRILLS", city, false): Actual text 'GAMBRILLS' and expected text 'GAMBRILLS' are matched 

2024-03-20 23:08:44 - [MESSAGE][PASSED] - Actual text 'GAMBRILLS' and expected text 'GAMBRILLS' are matched 

2024-03-20 23:08:44 - [TEST_STEP][PASSED] - email = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_emailAddress"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_emailAddress' is: 'iahmed@govolution.com'

2024-03-20 23:08:45 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_emailAddress' is: 'iahmed@govolution.com'

2024-03-20 23:08:45 - [TEST_STEP][PASSED] - verifyMatch("iahmed@govolution.com", email, false): Actual text 'iahmed@govolution.com' and expected text 'iahmed@govolution.com' are matched 

2024-03-20 23:08:45 - [MESSAGE][PASSED] - Actual text 'iahmed@govolution.com' and expected text 'iahmed@govolution.com' are matched 

2024-03-20 23:08:45 - [TEST_STEP][PASSED] - amount = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_amount"), "value"): Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_amount' is: '10.00'

2024-03-20 23:08:45 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_amount' is: '10.00'

2024-03-20 23:08:45 - [TEST_STEP][PASSED] - verifyMatch("10.00", amount, false): Actual text '10.00' and expected text '10.00' are matched 

2024-03-20 23:08:45 - [MESSAGE][PASSED] - Actual text '10.00' and expected text '10.00' are matched 

2024-03-20 23:08:45 - [TEST_STEP][PASSED] - amountReadOnly = getAttribute(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/input_amount"), "readonly"): Attribute 'readonly' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_amount' is: 'true'

2024-03-20 23:08:45 - [MESSAGE][PASSED] - Attribute 'readonly' of object 'Object Repository/RAD_Pages/PaymentEntry_Page/input_amount' is: 'true'

2024-03-20 23:08:45 - [TEST_STEP][PASSED] - verifyMatch("true", amountReadOnly, false): Actual text 'true' and expected text 'true' are matched 

2024-03-20 23:08:45 - [MESSAGE][PASSED] - Actual text 'true' and expected text 'true' are matched 

2024-03-20 23:08:45 - [TEST_STEP][PASSED] - verifyOptionSelectedByLabel(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/select_Country"), "United States", false, 20): All options with label 'United States' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_Country' 

2024-03-20 23:08:46 - [MESSAGE][PASSED] - All options with label 'United States' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_Country' 

2024-03-20 23:08:46 - [TEST_STEP][PASSED] - verifyOptionSelectedByLabel(findTestObject("Object Repository/RAD_Pages/PaymentEntry_Page/select_State"), "Maryland", false, 20): All options with label 'Maryland' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_State' 

2024-03-20 23:08:49 - [MESSAGE][PASSED] - All options with label 'Maryland' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_State' 

2024-03-20 23:08:49 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_PaymentEntry + "/input__cardNumber"), "4111111111111111"): Text '4111111111111111' is set on object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__cardNumber'

2024-03-20 23:08:49 - [MESSAGE][PASSED] - Text '4111111111111111' is set on object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__cardNumber'

2024-03-20 23:08:49 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_PaymentEntry + "/input__spc"), "123"): Text '123' is set on object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__spc'

2024-03-20 23:08:50 - [MESSAGE][PASSED] - Text '123' is set on object 'Object Repository/RAD_Pages/PaymentEntry_Page/input__spc'

2024-03-20 23:08:50 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_PaymentEntry + "/select_MM"), "12", false): All options with label '12' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_MM' 

2024-03-20 23:08:51 - [MESSAGE][PASSED] - All options with label '12' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_MM' 

2024-03-20 23:08:51 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_PaymentEntry + "/select_YYYY"), "2028", false): All options with label '2028' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_YYYY' 

2024-03-20 23:08:51 - [MESSAGE][PASSED] - All options with label '2028' are selected in object 'Object Repository/RAD_Pages/PaymentEntry_Page/select_YYYY' 

2024-03-20 23:08:51 - [TEST_STEP][PASSED] - click(findTestObject(orPath_PaymentEntry + "/input_Field_ccSubmit")): Object: 'Object Repository/RAD_Pages/PaymentEntry_Page/input_Field_ccSubmit' is clicked on

2024-03-20 23:08:52 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/PaymentEntry_Page/input_Field_ccSubmit' is clicked on

2024-03-20 23:08:52 - [TEST_STEP][PASSED] - click(findTestObject(orPath_PaymentConfirmation + "/input_N_confirmNotifyAction")): Object: 'Object Repository/RAD_Pages/PaymentConfirmation_Page/input_N_confirmNotifyAction' is clicked on

2024-03-20 23:08:53 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/PaymentConfirmation_Page/input_N_confirmNotifyAction' is clicked on

2024-03-20 23:08:53 - [TEST_STEP][PASSED] - verifyTextPresent("Service Fee Acceptance", true): Text 'Service Fee Acceptance' is present on page  using regular expression

2024-03-20 23:08:54 - [MESSAGE][PASSED] - Text 'Service Fee Acceptance' is present on page  using regular expression

2024-03-20 23:08:54 - [TEST_STEP][PASSED] - verifyTextPresent("This transaction is subject to a Service Fee of ", true): Text 'This transaction is subject to a Service Fee of ' is present on page  using regular expression

2024-03-20 23:08:54 - [MESSAGE][PASSED] - Text 'This transaction is subject to a Service Fee of ' is present on page  using regular expression

2024-03-20 23:08:54 - [TEST_STEP][PASSED] - verifyTextPresent("Payment Amount:", true): Text 'Payment Amount:' is present on page  using regular expression

2024-03-20 23:08:54 - [MESSAGE][PASSED] - Text 'Payment Amount:' is present on page  using regular expression

2024-03-20 23:08:54 - [TEST_STEP][PASSED] - verifyTextPresent("10.00", true): Text '10.00' is present on page  using regular expression

2024-03-20 23:08:54 - [MESSAGE][PASSED] - Text '10.00' is present on page  using regular expression

2024-03-20 23:08:54 - [TEST_STEP][PASSED] - verifyTextPresent("Service Fee:", true): Text 'Service Fee:' is present on page  using regular expression

2024-03-20 23:08:55 - [MESSAGE][PASSED] - Text 'Service Fee:' is present on page  using regular expression

2024-03-20 23:08:55 - [TEST_STEP][FAILED] - verifyTextPresent("1.00", true): Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:292)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)

2024-03-20 23:08:55 - [MESSAGE][FAILED] - Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:292)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)

2024-03-20 23:08:55 - [TEST_STEP][PASSED] - verifyTextPresent("Total Amount:", true): Text 'Total Amount:' is present on page  using regular expression

2024-03-20 23:08:55 - [MESSAGE][PASSED] - Text 'Total Amount:' is present on page  using regular expression

2024-03-20 23:08:55 - [TEST_STEP][FAILED] - verifyTextPresent("11.00", true): Text '11.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '11.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:294)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)

2024-03-20 23:08:55 - [MESSAGE][FAILED] - Text '11.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '11.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:294)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)

2024-03-20 23:08:55 - [TEST_STEP][PASSED] - verifyTextPresent("Two transactions will appear on your bank statement, one in the amount of", true): Text 'Two transactions will appear on your bank statement, one in the amount of' is present on page  using regular expression

2024-03-20 23:08:56 - [MESSAGE][PASSED] - Text 'Two transactions will appear on your bank statement, one in the amount of' is present on page  using regular expression

2024-03-20 23:08:56 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject(orPath_ServiceFeesAccept + "/input_convFeeNotifyAction"), 30)): null

2024-03-20 23:08:56 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/ServiceFeeAccept_Page/input_convFeeNotifyAction' is present

2024-03-20 23:08:56 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:08:56 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:08:56 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:08:56 - [TEST_STEP][PASSED] - if (execProfile == "QAProfile" || execProfile == "QA2Profile"): Text 'Successful Payment Receipt' is present on page  using regular expression

2024-03-20 23:08:56 - [TEST_STEP][PASSED] - click(findTestObject(orPath_ServiceFeesAccept + "/input_convFeeNotifyAction")): Object: 'Object Repository/RAD_Pages/ServiceFeeAccept_Page/input_convFeeNotifyAction' is clicked on

2024-03-20 23:08:57 - [MESSAGE][PASSED] - Object: 'Object Repository/RAD_Pages/ServiceFeeAccept_Page/input_convFeeNotifyAction' is clicked on

2024-03-20 23:08:57 - [TEST_STEP][PASSED] - delay(10): Delayed 10 second(s)

2024-03-20 23:09:07 - [MESSAGE][PASSED] - Delayed 10 second(s)

2024-03-20 23:09:07 - [TEST_STEP][PASSED] - verifyTextPresent("Successful Payment Receipt", true): Text 'Successful Payment Receipt' is present on page  using regular expression

2024-03-20 23:09:07 - [MESSAGE][PASSED] - Text 'Successful Payment Receipt' is present on page  using regular expression

2024-03-20 23:09:07 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:09:08 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[2024-03-20 23:08:13 - [TEST_CASE][FAILED] - Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Joint_BeforePayments_TC: Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Joint_BeforePayments_TC FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear'  (Root cause: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Script1694739459213.run(Script1694739459213.groovy:120)
	... 13 more
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:26)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.selectOptionByLabel(SelectOptionByLabelKeyword.groovy:98)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword.execute(SelectOptionByLabelKeyword.groovy:71)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.selectOptionByLabel(WebUiBuiltInKeywords.groovy:1230)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$selectOptionByLabel$2.call(Unknown Source)
	at Personal_Joint_BeforePayments_TC.run(Personal_Joint_BeforePayments_TC:120)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: com.kms.katalon.core.exception.StepFailedException: Unable to select option by label '2022' of object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 
	... 21 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 2022
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-B2QI6NS', ip: '172.31.253.185', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
	at com.kms.katalon.core.webui.common.WebUiCommonHelper.selectOrDeselectOptionsByLabel(WebUiCommonHelper.java:310)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.doCall(SelectOptionByLabelKeyword.groovy:87)
	at com.kms.katalon.core.webui.keyword.builtin.SelectOptionByLabelKeyword$_selectOptionByLabel_closure1.call(SelectOptionByLabelKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	... 19 more]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/MRF_TestCases/Extension_MRF_TC" time="127.056" classname="Test Cases/RAD_TestCases/MRF_TestCases/Extension_MRF_TC" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:09:08 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/MRF_TestCases/Extension_MRF_TC: Test Cases/RAD_TestCases/MRF_TestCases/Extension_MRF_TC

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/MRF.xlsx": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - nameSheet = "Extension": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - dataFile = "RADTestData/MRF_Extension": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - TaxType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - PaymentType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - FilingYear = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - PeriodEndingMonth = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - feinSSN = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - PeriodEndingMonth = findTestData(dataFile).getValue("Month", row): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - feinSSN = findTestData(dataFile).getValue("FeinSsn", row): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - logInfo("Payment Type: Extension Payments"): Payment Type: Extension Payments

2024-03-20 23:09:09 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: Corporate Income Tax

2024-03-20 23:09:09 - [MESSAGE][INFO] - Tax Type: Corporate Income Tax

2024-03-20 23:09:09 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:09:09 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:09:10 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:09:10 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:09:10 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:09:11 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:09:11 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:09:12 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:09:12 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:09:13 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:09:13 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), "Extension Payments", false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:09:14 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:09:14 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:09:14 - [MESSAGE][PASSED] - All options with label 'Corporate Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:09:15 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:09:15 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:09:15 - [TEST_STEP][PASSED] - switch (TaxType): null

2024-03-20 23:09:15 - [TEST_STEP][PASSED] - case "Corporate Income Tax":: null

2024-03-20 23:09:15 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PeriodEnding"), PeriodEndingMonth, false): All options with label 'September' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PeriodEnding' 

2024-03-20 23:09:16 - [MESSAGE][PASSED] - All options with label 'September' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PeriodEnding' 

2024-03-20 23:09:16 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:09:16 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_businessName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:09:16 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:09:16 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessRepfirstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:09:17 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:09:17 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessReplastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:09:18 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:09:18 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress1"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:09:18 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:09:18 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_city"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:09:19 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:09:19 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_zipCode"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:09:20 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:09:20 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_phoneNumber"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:09:20 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:09:20 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:09:21 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:09:21 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:09:22 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:09:22 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:09:22 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:22 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:22 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business name", true, CONTINUE_ON_FAILURE): Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:09:23 - [MESSAGE][PASSED] - Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:09:23 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep first name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:09:23 - [MESSAGE][PASSED] - Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:09:23 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep last name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:09:24 - [MESSAGE][PASSED] - Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:09:24 - [TEST_STEP][PASSED] - verifyTextPresent("Enter address", true, CONTINUE_ON_FAILURE): Text 'Enter address' is present on page  using regular expression

2024-03-20 23:09:24 - [MESSAGE][PASSED] - Text 'Enter address' is present on page  using regular expression

2024-03-20 23:09:24 - [TEST_STEP][PASSED] - verifyTextPresent("Enter city", true, CONTINUE_ON_FAILURE): Text 'Enter city' is present on page  using regular expression

2024-03-20 23:09:24 - [MESSAGE][PASSED] - Text 'Enter city' is present on page  using regular expression

2024-03-20 23:09:24 - [TEST_STEP][PASSED] - verifyTextPresent("Enter ZIP code", true, CONTINUE_ON_FAILURE): Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:09:25 - [MESSAGE][PASSED] - Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:09:25 - [TEST_STEP][PASSED] - verifyTextPresent("Enter a valid phone number", true, CONTINUE_ON_FAILURE): Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:09:25 - [MESSAGE][PASSED] - Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:09:25 - [TEST_STEP][PASSED] - verifyTextPresent("Enter Email", true, CONTINUE_ON_FAILURE): Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:09:25 - [MESSAGE][PASSED] - Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:09:25 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:09:25 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:25 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:25 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:09:25 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:09:25 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - PeriodEndingMonth = findTestData(dataFile).getValue("Month", row): null

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - feinSSN = findTestData(dataFile).getValue("FeinSsn", row): null

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - logInfo("Payment Type: Extension Payments"): Payment Type: Extension Payments

2024-03-20 23:09:26 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: Fiduciary Tax

2024-03-20 23:09:26 - [MESSAGE][INFO] - Tax Type: Fiduciary Tax

2024-03-20 23:09:26 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:09:26 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:09:33 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:09:33 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:09:33 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:09:34 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:09:34 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:09:34 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:09:34 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:09:36 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:09:36 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), "Extension Payments", false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:09:36 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:09:36 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:09:37 - [MESSAGE][PASSED] - All options with label 'Fiduciary Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:09:37 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:09:38 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:09:38 - [TEST_STEP][PASSED] - switch (TaxType): null

2024-03-20 23:09:38 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_businessName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:09:38 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:09:38 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessRepfirstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:09:39 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:09:39 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessReplastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:09:40 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:09:40 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress1"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:09:40 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:09:40 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_city"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:09:41 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:09:41 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_zipCode"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:09:42 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:09:42 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_phoneNumber"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:09:43 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:09:43 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:09:43 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:09:43 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:09:44 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:09:44 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:09:44 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:44 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:44 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business name", true, CONTINUE_ON_FAILURE): Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:09:45 - [MESSAGE][PASSED] - Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:09:45 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep first name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:09:45 - [MESSAGE][PASSED] - Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:09:45 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep last name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:09:46 - [MESSAGE][PASSED] - Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:09:46 - [TEST_STEP][PASSED] - verifyTextPresent("Enter address", true, CONTINUE_ON_FAILURE): Text 'Enter address' is present on page  using regular expression

2024-03-20 23:09:46 - [MESSAGE][PASSED] - Text 'Enter address' is present on page  using regular expression

2024-03-20 23:09:46 - [TEST_STEP][PASSED] - verifyTextPresent("Enter city", true, CONTINUE_ON_FAILURE): Text 'Enter city' is present on page  using regular expression

2024-03-20 23:09:46 - [MESSAGE][PASSED] - Text 'Enter city' is present on page  using regular expression

2024-03-20 23:09:46 - [TEST_STEP][PASSED] - verifyTextPresent("Enter ZIP code", true, CONTINUE_ON_FAILURE): Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:09:47 - [MESSAGE][PASSED] - Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:09:47 - [TEST_STEP][PASSED] - verifyTextPresent("Enter a valid phone number", true, CONTINUE_ON_FAILURE): Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:09:47 - [MESSAGE][PASSED] - Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:09:47 - [TEST_STEP][PASSED] - verifyTextPresent("Enter Email", true, CONTINUE_ON_FAILURE): Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:09:47 - [MESSAGE][PASSED] - Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:09:47 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:09:47 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:48 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - PeriodEndingMonth = findTestData(dataFile).getValue("Month", row): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - feinSSN = findTestData(dataFile).getValue("FeinSsn", row): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - logInfo("Payment Type: Extension Payments"): Payment Type: Extension Payments

2024-03-20 23:09:48 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: PTE Non-Electing Non-S Corp

2024-03-20 23:09:48 - [MESSAGE][INFO] - Tax Type: PTE Non-Electing Non-S Corp

2024-03-20 23:09:48 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:09:48 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:09:55 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:09:55 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:09:55 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:09:56 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:09:56 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:09:56 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:09:56 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:09:58 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:09:58 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), "Extension Payments", false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:09:59 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:09:59 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'PTE Non-Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:09:59 - [MESSAGE][PASSED] - All options with label 'PTE Non-Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:09:59 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:10:00 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:10:00 - [TEST_STEP][PASSED] - switch (TaxType): null

2024-03-20 23:10:00 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_businessName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:10:01 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:10:01 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessRepfirstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:10:01 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:10:01 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessReplastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:10:02 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:10:02 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress1"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:10:03 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:10:03 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_city"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:10:03 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:10:03 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_zipCode"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:10:04 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:10:04 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_phoneNumber"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:10:05 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:10:05 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:10:05 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:10:05 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:10:06 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:10:06 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:10:06 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:06 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:06 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business name", true, CONTINUE_ON_FAILURE): Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:10:07 - [MESSAGE][PASSED] - Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:10:07 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep first name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:10:08 - [MESSAGE][PASSED] - Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:10:08 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep last name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:10:08 - [MESSAGE][PASSED] - Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:10:08 - [TEST_STEP][PASSED] - verifyTextPresent("Enter address", true, CONTINUE_ON_FAILURE): Text 'Enter address' is present on page  using regular expression

2024-03-20 23:10:08 - [MESSAGE][PASSED] - Text 'Enter address' is present on page  using regular expression

2024-03-20 23:10:08 - [TEST_STEP][PASSED] - verifyTextPresent("Enter city", true, CONTINUE_ON_FAILURE): Text 'Enter city' is present on page  using regular expression

2024-03-20 23:10:09 - [MESSAGE][PASSED] - Text 'Enter city' is present on page  using regular expression

2024-03-20 23:10:09 - [TEST_STEP][PASSED] - verifyTextPresent("Enter ZIP code", true, CONTINUE_ON_FAILURE): Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:10:09 - [MESSAGE][PASSED] - Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:10:09 - [TEST_STEP][PASSED] - verifyTextPresent("Enter a valid phone number", true, CONTINUE_ON_FAILURE): Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:10:09 - [MESSAGE][PASSED] - Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:10:09 - [TEST_STEP][PASSED] - verifyTextPresent("Enter Email", true, CONTINUE_ON_FAILURE): Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:10:10 - [MESSAGE][PASSED] - Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:10 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - PeriodEndingMonth = findTestData(dataFile).getValue("Month", row): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - feinSSN = findTestData(dataFile).getValue("FeinSsn", row): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - logInfo("Payment Type: Extension Payments"): Payment Type: Extension Payments

2024-03-20 23:10:10 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: PTE Non-Electing S Corp

2024-03-20 23:10:10 - [MESSAGE][INFO] - Tax Type: PTE Non-Electing S Corp

2024-03-20 23:10:10 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:10:10 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:10:17 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:10:17 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:10:17 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:10:18 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:10:18 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:10:18 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:10:18 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:10:20 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:10:20 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), "Extension Payments", false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:10:21 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:10:21 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'PTE Non-Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:10:21 - [MESSAGE][PASSED] - All options with label 'PTE Non-Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:10:21 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:10:22 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:10:22 - [TEST_STEP][PASSED] - switch (TaxType): null

2024-03-20 23:10:22 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_businessName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:10:23 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:10:23 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessRepfirstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:10:23 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:10:23 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessReplastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:10:24 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:10:24 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress1"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:10:25 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:10:25 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_city"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:10:25 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:10:25 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_zipCode"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:10:26 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:10:26 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_phoneNumber"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:10:27 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:10:27 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:10:27 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:10:27 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:10:28 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:10:28 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:10:28 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:28 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:28 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business name", true, CONTINUE_ON_FAILURE): Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:10:29 - [MESSAGE][PASSED] - Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:10:29 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep first name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:10:29 - [MESSAGE][PASSED] - Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:10:29 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep last name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:10:30 - [MESSAGE][PASSED] - Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:10:30 - [TEST_STEP][PASSED] - verifyTextPresent("Enter address", true, CONTINUE_ON_FAILURE): Text 'Enter address' is present on page  using regular expression

2024-03-20 23:10:30 - [MESSAGE][PASSED] - Text 'Enter address' is present on page  using regular expression

2024-03-20 23:10:30 - [TEST_STEP][PASSED] - verifyTextPresent("Enter city", true, CONTINUE_ON_FAILURE): Text 'Enter city' is present on page  using regular expression

2024-03-20 23:10:31 - [MESSAGE][PASSED] - Text 'Enter city' is present on page  using regular expression

2024-03-20 23:10:31 - [TEST_STEP][PASSED] - verifyTextPresent("Enter ZIP code", true, CONTINUE_ON_FAILURE): Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:10:31 - [MESSAGE][PASSED] - Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:10:31 - [TEST_STEP][PASSED] - verifyTextPresent("Enter a valid phone number", true, CONTINUE_ON_FAILURE): Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:10:31 - [MESSAGE][PASSED] - Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:10:31 - [TEST_STEP][PASSED] - verifyTextPresent("Enter Email", true, CONTINUE_ON_FAILURE): Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:10:32 - [MESSAGE][PASSED] - Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:32 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - PeriodEndingMonth = findTestData(dataFile).getValue("Month", row): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - feinSSN = findTestData(dataFile).getValue("FeinSsn", row): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - logInfo("Payment Type: Extension Payments"): Payment Type: Extension Payments

2024-03-20 23:10:32 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: PTE Tax Electing Non-S Corp

2024-03-20 23:10:32 - [MESSAGE][INFO] - Tax Type: PTE Tax Electing Non-S Corp

2024-03-20 23:10:32 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:10:32 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:10:39 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:10:39 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:10:39 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:10:40 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:10:40 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:10:40 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:10:40 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:10:42 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:10:42 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), "Extension Payments", false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:10:43 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:10:43 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'PTE Tax Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:10:43 - [MESSAGE][PASSED] - All options with label 'PTE Tax Electing Non-S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:10:43 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:10:44 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:10:44 - [TEST_STEP][PASSED] - switch (TaxType): null

2024-03-20 23:10:44 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_businessName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:10:45 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:10:45 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessRepfirstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:10:45 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:10:45 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessReplastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:10:46 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:10:46 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress1"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:10:47 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:10:47 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_city"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:10:47 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:10:47 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_zipCode"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:10:48 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:10:48 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_phoneNumber"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:10:49 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:10:49 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:10:49 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:10:49 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:10:50 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:10:50 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:10:50 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:50 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:50 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business name", true, CONTINUE_ON_FAILURE): Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:10:51 - [MESSAGE][PASSED] - Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:10:51 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep first name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:10:51 - [MESSAGE][PASSED] - Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:10:51 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep last name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:10:52 - [MESSAGE][PASSED] - Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:10:52 - [TEST_STEP][PASSED] - verifyTextPresent("Enter address", true, CONTINUE_ON_FAILURE): Text 'Enter address' is present on page  using regular expression

2024-03-20 23:10:52 - [MESSAGE][PASSED] - Text 'Enter address' is present on page  using regular expression

2024-03-20 23:10:52 - [TEST_STEP][PASSED] - verifyTextPresent("Enter city", true, CONTINUE_ON_FAILURE): Text 'Enter city' is present on page  using regular expression

2024-03-20 23:10:52 - [MESSAGE][PASSED] - Text 'Enter city' is present on page  using regular expression

2024-03-20 23:10:52 - [TEST_STEP][PASSED] - verifyTextPresent("Enter ZIP code", true, CONTINUE_ON_FAILURE): Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:10:53 - [MESSAGE][PASSED] - Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:10:53 - [TEST_STEP][PASSED] - verifyTextPresent("Enter a valid phone number", true, CONTINUE_ON_FAILURE): Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:10:53 - [MESSAGE][PASSED] - Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:10:53 - [TEST_STEP][PASSED] - verifyTextPresent("Enter Email", true, CONTINUE_ON_FAILURE): Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:10:54 - [MESSAGE][PASSED] - Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:54 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - PeriodEndingMonth = findTestData(dataFile).getValue("Month", row): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - feinSSN = findTestData(dataFile).getValue("FeinSsn", row): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - logInfo("Payment Type: Extension Payments"): Payment Type: Extension Payments

2024-03-20 23:10:54 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: PTE Tax Electing S Corp

2024-03-20 23:10:54 - [MESSAGE][INFO] - Tax Type: PTE Tax Electing S Corp

2024-03-20 23:10:54 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:10:54 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:11:00 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:11:00 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:11:00 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:11:02 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:11:02 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:11:02 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:11:02 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:11:03 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:11:03 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), "Extension Payments", false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:11:04 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:11:04 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'PTE Tax Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:11:05 - [MESSAGE][PASSED] - All options with label 'PTE Tax Electing S Corp' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:11:05 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:11:05 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:11:05 - [TEST_STEP][PASSED] - switch (TaxType): null

2024-03-20 23:11:05 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_businessName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:11:06 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_businessName'

2024-03-20 23:11:06 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessRepfirstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:11:07 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessRepfirstName'

2024-03-20 23:11:07 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_BusinessReplastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:11:07 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_BusinessReplastName'

2024-03-20 23:11:07 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress1"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:11:08 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:11:08 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_city"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:11:09 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:11:09 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_zipCode"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:11:09 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:11:09 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_phoneNumber"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:11:10 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:11:10 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:11:11 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:11:11 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:11:12 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:11:12 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:11:12 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:12 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:12 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business name", true, CONTINUE_ON_FAILURE): Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:11:13 - [MESSAGE][PASSED] - Text 'Enter business name' is present on page  using regular expression

2024-03-20 23:11:13 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep first name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:11:13 - [MESSAGE][PASSED] - Text 'Enter business rep first name' is present on page  using regular expression

2024-03-20 23:11:13 - [TEST_STEP][PASSED] - verifyTextPresent("Enter business rep last name", true, CONTINUE_ON_FAILURE): Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:11:13 - [MESSAGE][PASSED] - Text 'Enter business rep last name' is present on page  using regular expression

2024-03-20 23:11:13 - [TEST_STEP][PASSED] - verifyTextPresent("Enter address", true, CONTINUE_ON_FAILURE): Text 'Enter address' is present on page  using regular expression

2024-03-20 23:11:14 - [MESSAGE][PASSED] - Text 'Enter address' is present on page  using regular expression

2024-03-20 23:11:14 - [TEST_STEP][PASSED] - verifyTextPresent("Enter city", true, CONTINUE_ON_FAILURE): Text 'Enter city' is present on page  using regular expression

2024-03-20 23:11:14 - [MESSAGE][PASSED] - Text 'Enter city' is present on page  using regular expression

2024-03-20 23:11:14 - [TEST_STEP][PASSED] - verifyTextPresent("Enter ZIP code", true, CONTINUE_ON_FAILURE): Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:11:14 - [MESSAGE][PASSED] - Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:11:14 - [TEST_STEP][PASSED] - verifyTextPresent("Enter a valid phone number", true, CONTINUE_ON_FAILURE): Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:11:15 - [MESSAGE][PASSED] - Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:11:15 - [TEST_STEP][PASSED] - verifyTextPresent("Enter Email", true, CONTINUE_ON_FAILURE): Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:11:15 - [MESSAGE][PASSED] - Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:11:15 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:11:15 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:15 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/MRF_TestCases/Personal_Individual_MRF_TC" time="20.549" classname="Test Cases/RAD_TestCases/MRF_TestCases/Personal_Individual_MRF_TC" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:11:15 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/MRF_TestCases/Personal_Individual_MRF_TC: Test Cases/RAD_TestCases/MRF_TestCases/Personal_Individual_MRF_TC

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/MRF.xlsx": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - nameSheet = "Personal_IND": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - dataFile = "RADTestData/MRF_Personal_IND": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - TaxType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - PaymentType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - FilingYear = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - PeriodEndingMonth = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - executionProfile = getExecutionProfile(): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - logInfo("Payment Type: " + PaymentType): Payment Type: Extension Payments

2024-03-20 23:11:16 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: Personal Income Tax

2024-03-20 23:11:16 - [MESSAGE][INFO] - Tax Type: Personal Income Tax

2024-03-20 23:11:16 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:11:16 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:11:18 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:11:18 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:11:18 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:11:19 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:11:19 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:11:19 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:11:19 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:11:20 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:11:20 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), PaymentType, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:11:22 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:11:22 - [TEST_STEP][PASSED] - switch (PaymentType): null

2024-03-20 23:11:22 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:11:22 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:11:23 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:11:23 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:11:23 - [TEST_STEP][PASSED] - if (!(FilingYear.isEmpty())): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:11:23 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:11:24 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:11:24 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_firstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName'

2024-03-20 23:11:24 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName'

2024-03-20 23:11:24 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_lastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:11:25 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:11:25 - [TEST_STEP][PASSED] - if (TaxType.equalsIgnoreCase("Estate Tax")): null

2024-03-20 23:11:25 - [TEST_STEP][PASSED] - else: Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:11:25 - [TEST_STEP][PASSED] - setText(findTestObject("RAD_RecordAndPlay/input_concatSSN"), " "): Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:11:26 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:11:26 - [TEST_STEP][PASSED] - setText(findTestObject("RAD_RecordAndPlay/input_concatReSSN"), " "): Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:11:26 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:11:26 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress1"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:11:27 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:11:27 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_city"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:11:28 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:11:28 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_zipCode"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:11:28 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:11:28 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_phoneNumber"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:11:29 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:11:29 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:11:30 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:11:30 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:11:31 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:11:31 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:11:31 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:31 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:31 - [TEST_STEP][PASSED] - verifyTextPresent("Enter first name", true, CONTINUE_ON_FAILURE): Text 'Enter first name' is present on page  using regular expression

2024-03-20 23:11:31 - [MESSAGE][PASSED] - Text 'Enter first name' is present on page  using regular expression

2024-03-20 23:11:31 - [TEST_STEP][PASSED] - verifyTextPresent("Enter last name", true, CONTINUE_ON_FAILURE): Text 'Enter last name' is present on page  using regular expression

2024-03-20 23:11:32 - [MESSAGE][PASSED] - Text 'Enter last name' is present on page  using regular expression

2024-03-20 23:11:32 - [TEST_STEP][PASSED] - verifyTextPresent("Enter address", true, CONTINUE_ON_FAILURE): Text 'Enter address' is present on page  using regular expression

2024-03-20 23:11:32 - [MESSAGE][PASSED] - Text 'Enter address' is present on page  using regular expression

2024-03-20 23:11:32 - [TEST_STEP][PASSED] - verifyTextPresent("Enter city", true, CONTINUE_ON_FAILURE): Text 'Enter city' is present on page  using regular expression

2024-03-20 23:11:33 - [MESSAGE][PASSED] - Text 'Enter city' is present on page  using regular expression

2024-03-20 23:11:33 - [TEST_STEP][PASSED] - verifyTextPresent("Enter ZIP code", true, CONTINUE_ON_FAILURE): Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:11:33 - [MESSAGE][PASSED] - Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:11:33 - [TEST_STEP][PASSED] - verifyTextPresent("Enter a valid phone number", true, CONTINUE_ON_FAILURE): Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:11:33 - [MESSAGE][PASSED] - Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:11:33 - [TEST_STEP][PASSED] - verifyTextPresent("Enter Email", true, CONTINUE_ON_FAILURE): Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:11:34 - [MESSAGE][PASSED] - Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:11:34 - [TEST_STEP][PASSED] - if (TaxType.equalsIgnoreCase("Estate Tax")): null

2024-03-20 23:11:34 - [TEST_STEP][PASSED] - else: Text 'Re-type SSN Validation Error' is present on page  using regular expression

2024-03-20 23:11:34 - [TEST_STEP][PASSED] - verifyTextPresent("Please enter a valid SSN with 9 digits", true, CONTINUE_ON_FAILURE): Text 'Please enter a valid SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:11:34 - [MESSAGE][PASSED] - Text 'Please enter a valid SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:11:34 - [TEST_STEP][PASSED] - verifyTextPresent("Re-type SSN Validation Error", true, CONTINUE_ON_FAILURE): Text 'Re-type SSN Validation Error' is present on page  using regular expression

2024-03-20 23:11:34 - [MESSAGE][PASSED] - Text 'Re-type SSN Validation Error' is present on page  using regular expression

2024-03-20 23:11:34 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:11:34 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:34 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:34 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:35 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/RAD_TestCases/MRF_TestCases/Personal_Joint_MRF_TC" time="29.125" classname="Test Cases/RAD_TestCases/MRF_TestCases/Personal_Joint_MRF_TC" status="PASSED">
         <system-out><![CDATA[2024-03-20 23:11:36 - [TEST_CASE][PASSED] - Test Cases/RAD_TestCases/MRF_TestCases/Personal_Joint_MRF_TC: Test Cases/RAD_TestCases/MRF_TestCases/Personal_Joint_MRF_TC

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - resColumn = "Result": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - datCloumn = "Date": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - fileLoc = "KatalonData/RADTestData/MRF.xlsx": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - nameSheet = "Personal_JNT": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - dataFile = "RADTestData/MRF_Personal_JNT": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_Landing = "Object Repository/RAD_Pages/Landing_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_TaxTypeFilingYear = "Object Repository/RAD_Pages/TaxTypeFilingYear_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_Amount = "Object Repository/RAD_Pages/PaymentAmount_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_AddressContact = "Object Repository/RAD_Pages/AddressAndContactInfo_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_Summary = "Object Repository/RAD_Pages/Summary_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_PaymentConfirmation = "Object Repository/RAD_Pages/PaymentConfirmation_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_ServiceFeesAccept = "Object Repository/RAD_Pages/ServiceFeeAccept_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_PaymentEntry = "Object Repository/RAD_Pages/PaymentEntry_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_FilingStatus = "Object Repository/RAD_Pages/FilingStatus_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - orPath_TaxPayer = "Object Repository/RAD_Pages/Taxpayer_Page": null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - ExecuteTC = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - TaxType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - PaymentType = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - FilingYear = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - PeriodEndingMonth = <not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression>: null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - executionProfile = getExecutionProfile(): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - numOfRows = findTestData(dataFile).getRowNumbers(): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - println("Number of Records: " + numOfRows): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - for ([row = 1, row <= numOfRows, (row++)]): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:36 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - out.println("Begin Record Number: " + row): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - today = new java.util.Date(): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - println(today): null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - datText = today: null

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - logInfo("Payment Type: " + PaymentType): Payment Type: Extension Payments

2024-03-20 23:11:37 - [MESSAGE][INFO] - Payment Type: Extension Payments

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - logInfo("Tax Type: " + TaxType): Tax Type: Personal Income Tax

2024-03-20 23:11:37 - [MESSAGE][INFO] - Tax Type: Personal Income Tax

2024-03-20 23:11:37 - [TEST_STEP][PASSED] - openBrowser(""): Browser is opened with url: ''

2024-03-20 23:11:37 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2024-03-20 23:11:41 - [MESSAGE][INFO] - Starting 'Chrome' driver

2024-03-20 23:11:41 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2024-03-20 23:11:41 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2024-03-20 23:11:43 - [MESSAGE][PASSED] - Browser is opened with url: ''

2024-03-20 23:11:43 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2024-03-20 23:11:43 - [MESSAGE][PASSED] - Current window maximized

2024-03-20 23:11:43 - [TEST_STEP][PASSED] - navigateToUrl(RADurl): Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:11:45 - [MESSAGE][PASSED] - Navigate to 'https://qa2.velocitypayment.com/client/rad/index.html' successfully

2024-03-20 23:11:45 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_Landing + "/dd_TaxType"), PaymentType, false): All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:11:45 - [MESSAGE][PASSED] - All options with label 'Extension Payments' are selected in object 'Object Repository/RAD_Pages/Landing_Page/dd_TaxType' 

2024-03-20 23:11:45 - [TEST_STEP][PASSED] - switch (PaymentType): null

2024-03-20 23:11:45 - [TEST_STEP][PASSED] - case "Extension Payments":: null

2024-03-20 23:11:45 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_PaymentType"), TaxType, false): All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:11:46 - [MESSAGE][PASSED] - All options with label 'Personal Income Tax' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_PaymentType' 

2024-03-20 23:11:46 - [TEST_STEP][PASSED] - break: null

2024-03-20 23:11:46 - [TEST_STEP][PASSED] - if (!(FilingYear.isEmpty())): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:11:46 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject(orPath_TaxTypeFilingYear + "/select_FilingYear"), FilingYear, false): All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:11:47 - [MESSAGE][PASSED] - All options with label '2023' are selected in object 'Object Repository/RAD_Pages/TaxTypeFilingYear_Page/select_FilingYear' 

2024-03-20 23:11:47 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_firstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName'

2024-03-20 23:11:47 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_firstName'

2024-03-20 23:11:47 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_TaxPayer + "/input_lastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:11:48 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/Taxpayer_Page/input_lastName'

2024-03-20 23:11:48 - [TEST_STEP][PASSED] - setText(findTestObject("RAD_RecordAndPlay/input_concatSSN"), " "): Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:11:49 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatSSN'

2024-03-20 23:11:49 - [TEST_STEP][PASSED] - setText(findTestObject("RAD_RecordAndPlay/input_concatReSSN"), " "): Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:11:49 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_concatReSSN'

2024-03-20 23:11:49 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_streetAddress1"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:11:50 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_streetAddress1'

2024-03-20 23:11:50 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_city"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:11:51 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_city'

2024-03-20 23:11:51 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_zipCode"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:11:51 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_zipCode'

2024-03-20 23:11:51 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_phoneNumber"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:11:52 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_phoneNumber'

2024-03-20 23:11:52 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_eMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:11:53 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_eMailAddress'

2024-03-20 23:11:53 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_AddressContact + "/input_reEnterEMailAddress"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:11:54 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/AddressAndContactInfo_Page/input_reEnterEMailAddress'

2024-03-20 23:11:54 - [TEST_STEP][PASSED] - scrollToElement(findTestObject(orPath_Landing + "/button_Continue"), 3): Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:11:54 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/RAD_Pages/Landing_Page/button_Continue' successfully

2024-03-20 23:11:54 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject(orPath_FilingStatus + "/input_JointFiling_userType_New"), 5): Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is clickable

2024-03-20 23:11:55 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is clickable

2024-03-20 23:11:55 - [TEST_STEP][PASSED] - check(findTestObject(orPath_FilingStatus + "/input_JointFiling_userType_New")): Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is checked

2024-03-20 23:11:55 - [MESSAGE][PASSED] - Object 'Object Repository/RAD_Pages/FilingStatus_Page/input_JointFiling_userType_New' is checked

2024-03-20 23:11:55 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2024-03-20 23:11:57 - [MESSAGE][PASSED] - Delayed 2 second(s)

2024-03-20 23:11:57 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_FilingStatus + "/input_jointFirstName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/FilingStatus_Page/input_jointFirstName'

2024-03-20 23:11:58 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/FilingStatus_Page/input_jointFirstName'

2024-03-20 23:11:58 - [TEST_STEP][PASSED] - setText(findTestObject(orPath_FilingStatus + "/input_jointLastName"), " "): Text ' ' is set on object 'Object Repository/RAD_Pages/FilingStatus_Page/input_jointLastName'

2024-03-20 23:11:58 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_Pages/FilingStatus_Page/input_jointLastName'

2024-03-20 23:11:58 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/RAD_RecordAndPlay/input_JointFilerSSN"), " "): Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_JointFilerSSN'

2024-03-20 23:11:59 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_JointFilerSSN'

2024-03-20 23:11:59 - [TEST_STEP][PASSED] - setText(findTestObject("Object Repository/RAD_RecordAndPlay/input_reTypeJointFilerSSN"), " "): Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_reTypeJointFilerSSN'

2024-03-20 23:11:59 - [MESSAGE][PASSED] - Text ' ' is set on object 'Object Repository/RAD_RecordAndPlay/input_reTypeJointFilerSSN'

2024-03-20 23:11:59 - [TEST_STEP][PASSED] - resText = "Fail": null

2024-03-20 23:11:59 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:59 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:11:59 - [TEST_STEP][PASSED] - verifyTextPresent("Enter first name", true, CONTINUE_ON_FAILURE): Text 'Enter first name' is present on page  using regular expression

2024-03-20 23:12:00 - [MESSAGE][PASSED] - Text 'Enter first name' is present on page  using regular expression

2024-03-20 23:12:00 - [TEST_STEP][PASSED] - verifyTextPresent("Enter last name", true, CONTINUE_ON_FAILURE): Text 'Enter last name' is present on page  using regular expression

2024-03-20 23:12:00 - [MESSAGE][PASSED] - Text 'Enter last name' is present on page  using regular expression

2024-03-20 23:12:00 - [TEST_STEP][PASSED] - verifyTextPresent("Please enter a valid SSN with 9 digits", true, CONTINUE_ON_FAILURE): Text 'Please enter a valid SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:12:01 - [MESSAGE][PASSED] - Text 'Please enter a valid SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:12:01 - [TEST_STEP][PASSED] - verifyTextPresent("Re-type SSN Validation Error", true, CONTINUE_ON_FAILURE): Text 'Re-type SSN Validation Error' is present on page  using regular expression

2024-03-20 23:12:01 - [MESSAGE][PASSED] - Text 'Re-type SSN Validation Error' is present on page  using regular expression

2024-03-20 23:12:01 - [TEST_STEP][PASSED] - verifyTextPresent("Enter address", true, CONTINUE_ON_FAILURE): Text 'Enter address' is present on page  using regular expression

2024-03-20 23:12:01 - [MESSAGE][PASSED] - Text 'Enter address' is present on page  using regular expression

2024-03-20 23:12:01 - [TEST_STEP][PASSED] - verifyTextPresent("Enter city", true, CONTINUE_ON_FAILURE): Text 'Enter city' is present on page  using regular expression

2024-03-20 23:12:02 - [MESSAGE][PASSED] - Text 'Enter city' is present on page  using regular expression

2024-03-20 23:12:02 - [TEST_STEP][PASSED] - verifyTextPresent("Enter ZIP code", true, CONTINUE_ON_FAILURE): Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:12:02 - [MESSAGE][PASSED] - Text 'Enter ZIP code' is present on page  using regular expression

2024-03-20 23:12:02 - [TEST_STEP][PASSED] - verifyTextPresent("Enter a valid phone number", true, CONTINUE_ON_FAILURE): Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:12:02 - [MESSAGE][PASSED] - Text 'Enter a valid phone number' is present on page  using regular expression

2024-03-20 23:12:02 - [TEST_STEP][PASSED] - verifyTextPresent("Enter Email", true, CONTINUE_ON_FAILURE): Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:12:03 - [MESSAGE][PASSED] - Text 'Enter Email' is present on page  using regular expression

2024-03-20 23:12:03 - [TEST_STEP][PASSED] - verifyTextPresent("Enter joint payer first name", true, CONTINUE_ON_FAILURE): Text 'Enter joint payer first name' is present on page  using regular expression

2024-03-20 23:12:03 - [MESSAGE][PASSED] - Text 'Enter joint payer first name' is present on page  using regular expression

2024-03-20 23:12:03 - [TEST_STEP][PASSED] - verifyTextPresent("Enter joint payer last name", true, CONTINUE_ON_FAILURE): Text 'Enter joint payer last name' is present on page  using regular expression

2024-03-20 23:12:03 - [MESSAGE][PASSED] - Text 'Enter joint payer last name' is present on page  using regular expression

2024-03-20 23:12:03 - [TEST_STEP][PASSED] - verifyTextPresent("Please enter a valid SSN with 9 digits", true, CONTINUE_ON_FAILURE): Text 'Please enter a valid SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:12:04 - [MESSAGE][PASSED] - Text 'Please enter a valid SSN with 9 digits' is present on page  using regular expression

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - verifyTextPresent("Re-type SSN Validation Error", true, CONTINUE_ON_FAILURE): Text 'Re-type SSN Validation Error' is present on page  using regular expression

2024-03-20 23:12:04 - [MESSAGE][PASSED] - Text 'Re-type SSN Validation Error' is present on page  using regular expression

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - resText = "Pass": null

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - pages.WriteExcel.demoKey(resText, datText, resColumn, datCloumn, fileLoc, nameSheet, row): pages.WriteExcel.demoKey is PASSED

2024-03-20 23:12:04 - [MESSAGE][PASSED] - pages.WriteExcel.demoKey is PASSED

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:12:04 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - ExecuteTC = findTestData(dataFile).getValue("Execute", row): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - TaxType = findTestData(dataFile).getValue("TaxType", row): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - PaymentType = findTestData(dataFile).getValue("PaymentType", row): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - FilingYear = findTestData(dataFile).getValue("Year", row): null

2024-03-20 23:12:05 - [TEST_STEP][PASSED] - if (ExecuteTC.equalsIgnoreCase("Y")): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2024-03-20 23:00:56 - [TEST_SUITE][FAILED] - RAD_UI_TestSuite: Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	... 23 more]]></system-out>
      <system-err><![CDATA[2024-03-20 23:00:56 - [TEST_SUITE][FAILED] - RAD_UI_TestSuite: Test Cases/RAD_TestCases/BeforePayments_TestCases/Personal_Individual_BeforePayments_TC FAILED.
Reason:
com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression (Root cause: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
)
	at com.kms.katalon.core.keyword.internal.KeywordMain.stepFailed(KeywordMain.groovy:39)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:74)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1723)
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$6.call(Unknown Source)
	at Personal_Individual_BeforePayments_TC.run(Personal_Individual_BeforePayments_TC:276)
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:448)
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:439)
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:418)
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:410)
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:285)
	at com.kms.katalon.core.common.CommonExecutor.accessTestCaseMainPhase(CommonExecutor.java:65)
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:148)
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:106)
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:187)
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)
	at TempTestSuite1710990049300.run(TempTestSuite1710990049300.groovy:36)
Caused by: com.kms.katalon.core.exception.StepFailedException: Text '1.00' is not present on page  using regular expression
	... 23 more]]></system-err>
   </testsuite>
</testsuites>
