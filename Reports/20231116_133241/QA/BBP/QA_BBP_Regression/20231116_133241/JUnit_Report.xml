<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="QA_BBP_Regression" time="81.067" tests="5" failures="0" errors="0">
   <testsuite name="QA_BBP_Regression" tests="5" failures="0" errors="0" time="81.067" skipped="0" timestamp="2023-11-16 13:32:48" hostname="imtiaz - DESKTOP-B2QI6NS.govolution.com" id="Test Suites/QA/BBP/QA_BBP_Regression">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="E:\\Cloned-Project-Katalon\\VPS-Katalon\\Reports\\20231116_133241\\QA\\BBP\\QA_BBP_Regression\\20231116_133241"/>
         <property name="logFiles" value="E:\\Cloned-Project-Katalon\\VPS-Katalon\\Reports\\20231116_133241\\QA\\BBP\\QA_BBP_Regression\\20231116_133241\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="imtiaz - DESKTOP-B2QI6NS.govolution.com"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="8.6.6.208"/>
         <property name="browser" value="Chrome 119.0.0.0"/>
         <property name="hostAddress" value="172.31.253.139"/>
         <property name="sessionId" value="6eb19ed115aa2a3f361e2596d833e150"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Windows 10"/>
      </properties>
      <testcase name="Test Cases/BBP-SelIDE/LookupCaseInsensitive" time="17.766" classname="Test Cases/BBP-SelIDE/LookupCaseInsensitive" status="PASSED">
         <system-out><![CDATA[2023-11-16 13:32:49 - [TEST_CASE][PASSED] - Test Cases/BBP-SelIDE/LookupCaseInsensitive: Test Cases/BBP-SelIDE/LookupCaseInsensitive

2023-11-16 13:32:50 - [TEST_STEP][PASSED] - softAssertion = new org.testng.asserts.SoftAssert(): null

2023-11-16 13:32:50 - [TEST_STEP][PASSED] - openBrowser("https://www.google.com/"): Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:32:50 - [MESSAGE][INFO] - Starting 'Chrome' driver

2023-11-16 13:32:51 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2023-11-16 13:32:51 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2023-11-16 13:32:57 - [MESSAGE][PASSED] - Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:32:57 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-11-16 13:32:57 - [TEST_STEP][PASSED] - baseUrl = "https://www.google.com/": null

2023-11-16 13:32:57 - [TEST_STEP][PASSED] - selenium = new com.thoughtworks.selenium.webdriven.WebDriverBackedSelenium(driver, baseUrl): null

2023-11-16 13:32:57 - [TEST_STEP][PASSED] - bbpURL = BBPURL: null

2023-11-16 13:32:58 - [TEST_STEP][PASSED] - selenium.open(bbpURL): null

2023-11-16 13:32:58 - [TEST_STEP][PASSED] - selenium.type("id=field1", "Mandooza"): null

2023-11-16 13:32:59 - [TEST_STEP][PASSED] - selenium.type("id=field2", "4106280791"): null

2023-11-16 13:32:59 - [TEST_STEP][PASSED] - selenium.click("name=Test"): null

2023-11-16 13:32:59 - [TEST_STEP][PASSED] - Thread.sleep(2000): null

2023-11-16 13:33:01 - [TEST_STEP][PASSED] - selenium.click("name=paysubmit"): null

2023-11-16 13:33:02 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:02 - [TEST_STEP][PASSED] - softAssertion.assertEquals("Select Payment Method", selenium.getText("css=h1")): null

2023-11-16 13:33:02 - [TEST_STEP][PASSED] - verifyTextPresent("Select Payment Method", true): Text 'Select Payment Method' is present on page  using regular expression

2023-11-16 13:33:03 - [MESSAGE][PASSED] - Text 'Select Payment Method' is present on page  using regular expression

2023-11-16 13:33:03 - [TEST_STEP][PASSED] - selenium.open(bbpURL): null

2023-11-16 13:33:03 - [TEST_STEP][PASSED] - selenium.type("id=field1", "MANDOOZA"): null

2023-11-16 13:33:03 - [TEST_STEP][PASSED] - selenium.type("id=field2", "4106280791"): null

2023-11-16 13:33:03 - [TEST_STEP][PASSED] - selenium.click("name=Test"): null

2023-11-16 13:33:03 - [TEST_STEP][PASSED] - Thread.sleep(2000): null

2023-11-16 13:33:05 - [TEST_STEP][PASSED] - selenium.click("name=paysubmit"): null

2023-11-16 13:33:06 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:06 - [TEST_STEP][PASSED] - verifyTextPresent("Select Payment Method", true): Text 'Select Payment Method' is present on page  using regular expression

2023-11-16 13:33:06 - [MESSAGE][PASSED] - Text 'Select Payment Method' is present on page  using regular expression]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/BBP-SelIDE/MaxAmountErrorCC" time="16.584" classname="Test Cases/BBP-SelIDE/MaxAmountErrorCC" status="PASSED">
         <system-out><![CDATA[2023-11-16 13:33:06 - [TEST_CASE][PASSED] - Test Cases/BBP-SelIDE/MaxAmountErrorCC: Test Cases/BBP-SelIDE/MaxAmountErrorCC

2023-11-16 13:33:07 - [TEST_STEP][PASSED] - softAssertion = new org.testng.asserts.SoftAssert(): null

2023-11-16 13:33:07 - [TEST_STEP][PASSED] - openBrowser("https://www.google.com/"): Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:33:07 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2023-11-16 13:33:08 - [MESSAGE][INFO] - Starting 'Chrome' driver

2023-11-16 13:33:08 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2023-11-16 13:33:08 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2023-11-16 13:33:12 - [MESSAGE][PASSED] - Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:33:12 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-11-16 13:33:12 - [TEST_STEP][PASSED] - baseUrl = "https://www.google.com/": null

2023-11-16 13:33:12 - [TEST_STEP][PASSED] - selenium = new com.thoughtworks.selenium.webdriven.WebDriverBackedSelenium(driver, baseUrl): null

2023-11-16 13:33:12 - [TEST_STEP][PASSED] - bbpURL = BBPURL: null

2023-11-16 13:33:12 - [TEST_STEP][PASSED] - selenium.open(bbpURL): null

2023-11-16 13:33:13 - [TEST_STEP][PASSED] - selenium.type("id=field1", "111150"): null

2023-11-16 13:33:13 - [TEST_STEP][PASSED] - selenium.type("id=field2", "111151"): null

2023-11-16 13:33:13 - [TEST_STEP][PASSED] - selenium.click("name=Test"): null

2023-11-16 13:33:14 - [TEST_STEP][PASSED] - Thread.sleep(2000): null

2023-11-16 13:33:16 - [TEST_STEP][PASSED] - selenium.click("name=paysubmit"): null

2023-11-16 13:33:16 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:17 - [TEST_STEP][PASSED] - selenium.click("name=paymentMethod"): null

2023-11-16 13:33:17 - [TEST_STEP][PASSED] - selenium.click("css=input[type="submit"]"): null

2023-11-16 13:33:18 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:18 - [TEST_STEP][PASSED] - selenium.type("name=amount", 00".toString()): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.type("name=userDefined2", "UDF2 Data1".toString()): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.type("name=userDefined3", "UDF3 Data1".toString()): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.select("name=variableField4DropdownGroupItemID", "label=Purple"): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.select("name=variableField5DropdownGroupItemID", "label=Orange"): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.type("name=userDefined6", "UDF6 Data1".toString()): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.type("name=userDefined7", "UDF7 Data1".toString()): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.type("name=userDefined8", "UDF8 Data1".toString()): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.type("name=billingName", "Hunter Helms".toString()): null

2023-11-16 13:33:19 - [TEST_STEP][PASSED] - selenium.type("id=cardNumber", "4111111111111111"): null

2023-11-16 13:33:20 - [TEST_STEP][PASSED] - selenium.type("id=spc", "123"): null

2023-11-16 13:33:20 - [TEST_STEP][PASSED] - selenium.select("name=cardExpMonth", "label=04"): null

2023-11-16 13:33:20 - [TEST_STEP][PASSED] - selenium.select("name=cardExpYear", "label=2025"): null

2023-11-16 13:33:20 - [TEST_STEP][PASSED] - selenium.type("name=billingAddress", "2311 york road".toString()): null

2023-11-16 13:33:21 - [TEST_STEP][PASSED] - selenium.type("name=billingAddress2", "Suite 600".toString()): null

2023-11-16 13:33:21 - [TEST_STEP][PASSED] - selenium.type("id=billing-zip-input", "21054"): null

2023-11-16 13:33:21 - [TEST_STEP][PASSED] - selenium.type("name=emailAddress", com".toString()): null

2023-11-16 13:33:21 - [TEST_STEP][PASSED] - selenium.click("id=checkedAcceptCondition"): null

2023-11-16 13:33:21 - [TEST_STEP][PASSED] - selenium.click("name=ccSubmit"): null

2023-11-16 13:33:22 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:23 - [TEST_STEP][PASSED] - selenium.selectWindow("null"): null

2023-11-16 13:33:23 - [TEST_STEP][PASSED] - verifyTextPresent("Amount is greater than maximum", true): Text 'Amount is greater than maximum' is present on page  using regular expression

2023-11-16 13:33:23 - [MESSAGE][PASSED] - Text 'Amount is greater than maximum' is present on page  using regular expression]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/BBP-SelIDE/MaxAmountErrorCorp" time="15.672" classname="Test Cases/BBP-SelIDE/MaxAmountErrorCorp" status="PASSED">
         <system-out><![CDATA[2023-11-16 13:33:23 - [TEST_CASE][PASSED] - Test Cases/BBP-SelIDE/MaxAmountErrorCorp: Test Cases/BBP-SelIDE/MaxAmountErrorCorp

2023-11-16 13:33:24 - [TEST_STEP][PASSED] - softAssertion = new org.testng.asserts.SoftAssert(): null

2023-11-16 13:33:24 - [TEST_STEP][PASSED] - openBrowser("https://www.google.com/"): Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:33:24 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2023-11-16 13:33:25 - [MESSAGE][INFO] - Starting 'Chrome' driver

2023-11-16 13:33:25 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2023-11-16 13:33:25 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2023-11-16 13:33:27 - [MESSAGE][PASSED] - Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:33:27 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-11-16 13:33:27 - [TEST_STEP][PASSED] - baseUrl = "https://www.google.com/": null

2023-11-16 13:33:27 - [TEST_STEP][PASSED] - selenium = new com.thoughtworks.selenium.webdriven.WebDriverBackedSelenium(driver, baseUrl): null

2023-11-16 13:33:27 - [TEST_STEP][PASSED] - bbpURL = BBPURL: null

2023-11-16 13:33:27 - [TEST_STEP][PASSED] - selenium.open(bbpURL): null

2023-11-16 13:33:30 - [TEST_STEP][PASSED] - selenium.type("id=field1", "111150"): null

2023-11-16 13:33:30 - [TEST_STEP][PASSED] - selenium.type("id=field2", "111151"): null

2023-11-16 13:33:30 - [TEST_STEP][PASSED] - selenium.click("name=Test"): null

2023-11-16 13:33:30 - [TEST_STEP][PASSED] - Thread.sleep(2000): null

2023-11-16 13:33:32 - [TEST_STEP][PASSED] - selenium.click("name=paysubmit"): null

2023-11-16 13:33:32 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:33 - [TEST_STEP][PASSED] - selenium.click("xpath=(//input[@name='paymentMethod'])[3]"): null

2023-11-16 13:33:33 - [TEST_STEP][PASSED] - selenium.click("css=input[type="submit"]"): null

2023-11-16 13:33:34 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:35 - [TEST_STEP][PASSED] - softAssertion.assertEquals("Required fields are highlighted with an asterisk.", selenium.getText("css=span.required")): null

2023-11-16 13:33:35 - [TEST_STEP][PASSED] - softAssertion.assertEquals("Please enter the following billing information about your payment:", selenium.getText("css=span.vrelay-header")): null

2023-11-16 13:33:35 - [TEST_STEP][PASSED] - verifyTextPresent("Required fields are highlighted with an asterisk.", true): Text 'Required fields are highlighted with an asterisk.' is present on page  using regular expression

2023-11-16 13:33:35 - [MESSAGE][PASSED] - Text 'Required fields are highlighted with an asterisk.' is present on page  using regular expression

2023-11-16 13:33:35 - [TEST_STEP][PASSED] - verifyTextPresent("Please enter the following billing information about your payment:", true): Text 'Please enter the following billing information about your payment:' is present on page  using regular expression

2023-11-16 13:33:36 - [MESSAGE][PASSED] - Text 'Please enter the following billing information about your payment:' is present on page  using regular expression

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.type("name=amount", 00".toString()): null

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.type("name=userDefined2", "UDF2 Data3".toString()): null

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.type("name=userDefined3", "UDF3 Data3".toString()): null

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.select("name=variableField4DropdownGroupItemID", "label=Purple"): null

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.select("name=variableField5DropdownGroupItemID", "label=Orange"): null

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.type("name=userDefined6", "UDF6 Data3".toString()): null

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.type("name=userDefined7", "UDF7 Data3".toString()): null

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.type("name=userDefined8", "UDF8 Data3".toString()): null

2023-11-16 13:33:36 - [TEST_STEP][PASSED] - selenium.type("name=billingCompanyname", "My Company".toString()): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.type("id=routingNumber", "256072691"): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.type("id=accountNumber", "33333333"): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.type("id=confirmAccountNumber", "33333333"): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.type("name=ein", "123456789"): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.type("name=billingAddress", "2311 york road".toString()): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.type("name=billingAddress2", "suite 600".toString()): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.type("id=billing-zip-input", "21054"): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.type("name=emailAddress", com".toString()): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.click("id=checkedAcceptCondition"): null

2023-11-16 13:33:37 - [TEST_STEP][PASSED] - selenium.click("name=achSubmit"): null

2023-11-16 13:33:38 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:38 - [TEST_STEP][PASSED] - verifyTextPresent("Amount is greater than maximum", true): Text 'Amount is greater than maximum' is present on page  using regular expression

2023-11-16 13:33:39 - [MESSAGE][PASSED] - Text 'Amount is greater than maximum' is present on page  using regular expression]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/BBP-SelIDE/MaxAmountErrorPC" time="16.061" classname="Test Cases/BBP-SelIDE/MaxAmountErrorPC" status="PASSED">
         <system-out><![CDATA[2023-11-16 13:33:39 - [TEST_CASE][PASSED] - Test Cases/BBP-SelIDE/MaxAmountErrorPC: Test Cases/BBP-SelIDE/MaxAmountErrorPC

2023-11-16 13:33:40 - [TEST_STEP][PASSED] - softAssertion = new org.testng.asserts.SoftAssert(): null

2023-11-16 13:33:40 - [TEST_STEP][PASSED] - openBrowser("https://www.google.com/"): Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:33:40 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2023-11-16 13:33:41 - [MESSAGE][INFO] - Starting 'Chrome' driver

2023-11-16 13:33:41 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2023-11-16 13:33:41 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2023-11-16 13:33:44 - [MESSAGE][PASSED] - Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:33:44 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-11-16 13:33:44 - [TEST_STEP][PASSED] - baseUrl = "https://www.google.com/": null

2023-11-16 13:33:44 - [TEST_STEP][PASSED] - selenium = new com.thoughtworks.selenium.webdriven.WebDriverBackedSelenium(driver, baseUrl): null

2023-11-16 13:33:44 - [TEST_STEP][PASSED] - bbpURL = BBPURL: null

2023-11-16 13:33:44 - [TEST_STEP][PASSED] - selenium.open(bbpURL): null

2023-11-16 13:33:45 - [TEST_STEP][PASSED] - selenium.type("id=field1", "111150"): null

2023-11-16 13:33:45 - [TEST_STEP][PASSED] - selenium.type("id=field2", "111151"): null

2023-11-16 13:33:45 - [TEST_STEP][PASSED] - selenium.click("name=Test"): null

2023-11-16 13:33:45 - [TEST_STEP][PASSED] - Thread.sleep(2000): null

2023-11-16 13:33:47 - [TEST_STEP][PASSED] - selenium.click("name=paysubmit"): null

2023-11-16 13:33:48 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:48 - [TEST_STEP][PASSED] - selenium.click("xpath=(//input[@name='paymentMethod'])[2]"): null

2023-11-16 13:33:49 - [TEST_STEP][PASSED] - selenium.click("css=input[type="submit"]"): null

2023-11-16 13:33:50 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:50 - [TEST_STEP][PASSED] - softAssertion.assertEquals("Required fields are highlighted with an asterisk.", selenium.getText("css=span.required")): null

2023-11-16 13:33:50 - [TEST_STEP][PASSED] - softAssertion.assertEquals("Please enter the following billing information about your payment:", selenium.getText("css=span.vrelay-header")): null

2023-11-16 13:33:51 - [TEST_STEP][PASSED] - verifyTextPresent("Required fields are highlighted with an asterisk.", true): Text 'Required fields are highlighted with an asterisk.' is present on page  using regular expression

2023-11-16 13:33:51 - [MESSAGE][PASSED] - Text 'Required fields are highlighted with an asterisk.' is present on page  using regular expression

2023-11-16 13:33:51 - [TEST_STEP][PASSED] - verifyTextPresent("Please enter the following billing information about your payment:", true): Text 'Please enter the following billing information about your payment:' is present on page  using regular expression

2023-11-16 13:33:51 - [MESSAGE][PASSED] - Text 'Please enter the following billing information about your payment:' is present on page  using regular expression

2023-11-16 13:33:51 - [TEST_STEP][PASSED] - selenium.type("name=amount", 00".toString()): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("name=userDefined2", "UDF2 Data2".toString()): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("name=userDefined3", "UDF3 Data2".toString()): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.select("name=variableField4DropdownGroupItemID", "label=Purple"): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.select("name=variableField5DropdownGroupItemID", "label=Orange"): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("name=userDefined6", "UDF6 Data2".toString()): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("name=userDefined7", "UDF7 Data2".toString()): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("name=userDefined8", "UDF8 Data2".toString()): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("name=billingFirstname", "Molly"): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("name=billingLastname", "Hunter"): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("id=routingNumber", "256072691"): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("id=accountNumber", "11111111"): null

2023-11-16 13:33:52 - [TEST_STEP][PASSED] - selenium.type("id=confirmAccountNumber", "11111111"): null

2023-11-16 13:33:53 - [TEST_STEP][PASSED] - selenium.click("name=accountType"): null

2023-11-16 13:33:53 - [TEST_STEP][PASSED] - selenium.type("name=billingAddress", "2311 york road".toString()): null

2023-11-16 13:33:53 - [TEST_STEP][PASSED] - selenium.type("name=billingAddress2", "Suite 600".toString()): null

2023-11-16 13:33:53 - [TEST_STEP][PASSED] - selenium.type("id=billing-zip-input", "21054"): null

2023-11-16 13:33:53 - [TEST_STEP][PASSED] - selenium.type("name=emailAddress", com".toString()): null

2023-11-16 13:33:53 - [TEST_STEP][PASSED] - selenium.click("id=checkedAcceptCondition"): null

2023-11-16 13:33:53 - [TEST_STEP][PASSED] - selenium.click("name=achSubmit"): null

2023-11-16 13:33:54 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:33:54 - [TEST_STEP][PASSED] - softAssertion.assertEquals("Amount is greater than maximum", selenium.getText("css=span.vrelay-error")): null

2023-11-16 13:33:54 - [TEST_STEP][PASSED] - verifyTextPresent("Amount is greater than maximum", true): Text 'Amount is greater than maximum' is present on page  using regular expression

2023-11-16 13:33:55 - [MESSAGE][PASSED] - Text 'Amount is greater than maximum' is present on page  using regular expression]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/BBP-SelIDE/MaxAmountErrorPS" time="14.438" classname="Test Cases/BBP-SelIDE/MaxAmountErrorPS" status="PASSED">
         <system-out><![CDATA[2023-11-16 13:33:55 - [TEST_CASE][PASSED] - Test Cases/BBP-SelIDE/MaxAmountErrorPS: Test Cases/BBP-SelIDE/MaxAmountErrorPS

2023-11-16 13:33:56 - [TEST_STEP][PASSED] - softAssertion = new org.testng.asserts.SoftAssert(): null

2023-11-16 13:33:56 - [TEST_STEP][PASSED] - openBrowser("https://www.google.com/"): Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:33:56 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one

2023-11-16 13:33:57 - [MESSAGE][INFO] - Starting 'Chrome' driver

2023-11-16 13:33:57 - [MESSAGE][INFO] - User set preference: ['acceptInsecureCerts', 'true']

2023-11-16 13:33:57 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2023-11-16 13:34:00 - [MESSAGE][PASSED] - Browser is opened with url: 'https://www.google.com/'

2023-11-16 13:34:00 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-11-16 13:34:00 - [TEST_STEP][PASSED] - baseUrl = "https://www.google.com/": null

2023-11-16 13:34:00 - [TEST_STEP][PASSED] - selenium = new com.thoughtworks.selenium.webdriven.WebDriverBackedSelenium(driver, baseUrl): null

2023-11-16 13:34:00 - [TEST_STEP][PASSED] - bbpURL = BBPURL: null

2023-11-16 13:34:00 - [TEST_STEP][PASSED] - selenium.open(bbpURL): null

2023-11-16 13:34:01 - [TEST_STEP][PASSED] - selenium.type("id=field1", "111150"): null

2023-11-16 13:34:01 - [TEST_STEP][PASSED] - selenium.type("id=field2", "111151"): null

2023-11-16 13:34:01 - [TEST_STEP][PASSED] - selenium.click("name=Test"): null

2023-11-16 13:34:01 - [TEST_STEP][PASSED] - Thread.sleep(2000): null

2023-11-16 13:34:03 - [TEST_STEP][PASSED] - selenium.click("name=paysubmit"): null

2023-11-16 13:34:03 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:34:04 - [TEST_STEP][PASSED] - selenium.click("xpath=(//input[@name='paymentMethod'])[2]"): null

2023-11-16 13:34:04 - [TEST_STEP][PASSED] - selenium.click("css=input[type="submit"]"): null

2023-11-16 13:34:05 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:34:06 - [TEST_STEP][PASSED] - verifyTextPresent("Required fields are highlighted with an asterisk.", true): Text 'Required fields are highlighted with an asterisk.' is present on page  using regular expression

2023-11-16 13:34:06 - [MESSAGE][PASSED] - Text 'Required fields are highlighted with an asterisk.' is present on page  using regular expression

2023-11-16 13:34:06 - [TEST_STEP][PASSED] - verifyTextPresent("Please enter the following billing information about your payment:", true): Text 'Please enter the following billing information about your payment:' is present on page  using regular expression

2023-11-16 13:34:06 - [MESSAGE][PASSED] - Text 'Please enter the following billing information about your payment:' is present on page  using regular expression

2023-11-16 13:34:06 - [TEST_STEP][PASSED] - selenium.type("name=amount", 00".toString()): null

2023-11-16 13:34:06 - [TEST_STEP][PASSED] - selenium.type("name=userDefined2", "UDF2 Data2".toString()): null

2023-11-16 13:34:06 - [TEST_STEP][PASSED] - selenium.type("name=userDefined3", "UDF3 Data2".toString()): null

2023-11-16 13:34:06 - [TEST_STEP][PASSED] - selenium.select("name=variableField4DropdownGroupItemID", "label=Purple"): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.select("name=variableField5DropdownGroupItemID", "label=Orange"): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("name=userDefined6", "UDF6 Data2".toString()): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("name=userDefined7", "UDF7 Data2".toString()): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("name=userDefined8", "UDF8 Data2".toString()): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("name=billingFirstname", "Molly"): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("name=billingLastname", "Hunter"): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("id=routingNumber", "256072691"): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("id=accountNumber", "11111111"): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("id=confirmAccountNumber", "11111111"): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.click("document.process.accountType[1]"): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("name=billingAddress", "2311 york road".toString()): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("name=billingAddress2", "Suite 600".toString()): null

2023-11-16 13:34:07 - [TEST_STEP][PASSED] - selenium.type("id=billing-zip-input", "21054"): null

2023-11-16 13:34:08 - [TEST_STEP][PASSED] - selenium.type("name=emailAddress", com".toString()): null

2023-11-16 13:34:08 - [TEST_STEP][PASSED] - selenium.click("id=checkedAcceptCondition"): null

2023-11-16 13:34:08 - [TEST_STEP][PASSED] - selenium.click("name=achSubmit"): null

2023-11-16 13:34:08 - [TEST_STEP][PASSED] - selenium.waitForPageToLoad("30000"): null

2023-11-16 13:34:09 - [TEST_STEP][PASSED] - verifyTextPresent("Amount is greater than maximum", true): Text 'Amount is greater than maximum' is present on page  using regular expression

2023-11-16 13:34:09 - [MESSAGE][PASSED] - Text 'Amount is greater than maximum' is present on page  using regular expression]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2023-11-16 13:32:48 - [TEST_SUITE][PASSED] - QA_BBP_Regression: Test Cases/BBP-SelIDE/MaxAmountErrorPS]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
