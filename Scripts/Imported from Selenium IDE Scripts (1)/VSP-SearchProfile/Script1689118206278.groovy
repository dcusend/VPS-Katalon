import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.checkpoint.CheckpointFactory as CheckpointFactory
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as MobileBuiltInKeywords
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testcase.TestCaseFactory as TestCaseFactory
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testdata.TestDataFactory as TestDataFactory
import com.kms.katalon.core.testobject.ObjectRepository as ObjectRepository
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WSBuiltInKeywords
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUiBuiltInKeywords
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import internal.GlobalVariable as GlobalVariable
import com.kms.katalon.core.webui.driver.DriverFactory as DriverFactory
import com.kms.katalon.core.webui.driver.KatalonWebDriverBackedSelenium
import static com.kms.katalon.core.webui.driver.KatalonWebDriverBackedSelenium.*

import com.thoughtworks.selenium.Selenium
import org.openqa.selenium.Keys
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.WebDriver
import static org.junit.Assert.*
import java.util.concurrent.Callable
import java.util.regex.Pattern
import static org.apache.commons.lang3.StringUtils.join

'----------------------------------------------------'
'This test case script is generated by Katalon Studio'
'Generated date: 11-Jul-2023 07:30:06 PM'
'File path: C:\\Users\\imtiaz\\Documents\\Sel-New\\Prod-AdminSuite-NonBootstrap\\Prod-AdminSuite-NonBootstrap.side'
'Generated by: iahmed@govolution.com'
'----------------------------------------------------'

String baseUrl = ""

WebUI.openBrowser('')

selenium = new KatalonWebDriverBackedSelenium(baseUrl)

"open | https://www.velocitypayment.com/admin/testcustomer |  | "
selenium.open("https://www.velocitypayment.com/admin/testcustomer")

"pause | 2000 |  | "
Thread.sleep("2000")

"type | id=okta-signin-username | iahmed | "
selenium.type("id=okta-signin-username", "iahmed")

"type | id=okta-signin-password | Hello!2222222 | "
selenium.type("id=okta-signin-password", "Hello!2222222")

"click | id=okta-signin-submit |  | "
selenium.click("id=okta-signin-submit")

"pause | 2000 |  | "
Thread.sleep("2000")

"click | link=Access BWP License Fees GovTest |  | "
selenium.click("link=Access BWP License Fees GovTest")

"pause | 2000 |  | "
Thread.sleep("2000")

"verifyText | name=searchField | Name only Address only City only State/Province ZIP/Postal Code Comment only Company Name Account Number Username only Email Address | "
verifyEquals("Name only Address only City only State/Province ZIP/Postal Code Comment only Company Name Account Number Username only Email Address", selenium.getText("name=searchField"))

"type | name=searchString | ProfileToBeSearched | "
selenium.type("name=searchString", "ProfileToBeSearched")

"select | name=searchField | label=Name only | "
selenium.select("name=searchField", "label=Name only")

"click | name=searchButton |  | "
selenium.click("name=searchButton")

"verifyElementPresent | link=ProfileToBeSearched |  | "
verifyTrue(selenium.isElementPresent("link=ProfileToBeSearched"))

"verifyText | id=maincontent | regexp:Profile Search Results.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:Profile Search Results..*"))

"verifyText | id=maincontent | regexp:Administrative Profile.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:Administrative Profile..*"))

"verifyText | id=maincontent | regexp:First Name & Last Name:&nbsp;&nbsp;Andy Roberts.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:First Name & Last Name:&nbsp;&nbsp;Andy Roberts..*"))

"verifyText | id=maincontent | regexp:VisaToBeSearched.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:VisaToBeSearched..*"))

"verifyText | id=maincontent | regexp:BCToBeSearched.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:BCToBeSearched..*"))

"verifyText | id=maincontent | regexp:PCToBeSearched.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:PCToBeSearched..*"))

"verifyText | id=maincontent | regexp:AccountToBeSearched.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:AccountToBeSearched..*"))

"verifyText | id=maincontent | regexp:Address Line 1:&nbsp;&nbsp;8889 Howrah Bridge.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:Address Line 1:&nbsp;&nbsp;8889 Howrah Bridge..*"))

"verifyText | id=maincontent | regexp:City & State & Zip Code: COCKEYSVILLE ,&nbsp;&nbsp;MD&nbsp;&nbsp;&nbsp;&nbsp;21030.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:City & State & Zip Code: COCKEYSVILLE ,&nbsp;&nbsp;MD&nbsp;&nbsp;&nbsp;&nbsp;21030..*"))

"verifyText | id=maincontent | regexp:Country:&nbsp;&nbsp;United States.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:Country:&nbsp;&nbsp;United States..*"))

"verifyElementPresent | link=View |  | "
verifyTrue(selenium.isElementPresent("link=View"))

"verifyElementPresent | link=Edit |  | "
verifyTrue(selenium.isElementPresent("link=Edit"))

"verifyElementPresent | link=Delete |  | "
verifyTrue(selenium.isElementPresent("link=Delete"))

"verifyElementPresent | link=AuthCap |  | "
verifyTrue(selenium.isElementPresent("link=AuthCap"))

"verifyElementPresent | link=Auth |  | "
verifyTrue(selenium.isElementPresent("link=Auth"))

"verifyElementPresent | link=Debit |  | "
verifyTrue(selenium.isElementPresent("link=Debit"))

"verifyElementPresent | xpath=(//a[contains(text(),'Debit')])[2] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'Debit')])[2]"))

"click | link=View |  | "
selenium.click("link=View")

"verifyText | id=contentwrapper | regexp:View Customer Profile.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:View Customer Profile..*"))

"verifyText | id=contentwrapper | regexp:ProfileToBeSearched.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:ProfileToBeSearched..*"))

"verifyText | id=contentwrapper | regexp:Andy Roberts.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:Andy Roberts..*"))

"verifyText | id=contentwrapper | regexp:COCKEYSVILLE ,&nbsp;&nbsp;MD&nbsp;&nbsp;&nbsp;&nbsp;21030.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:COCKEYSVILLE ,&nbsp;&nbsp;MD&nbsp;&nbsp;&nbsp;&nbsp;21030..*"))

"verifyText | id=contentwrapper | regexp:United States.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:United States..*"))

"verifyText | id=maincontent | regexp:8889 Howrah Bridge.* | "
verifyTrue(selenium.getText("id=maincontent").matches("regexp:8889 Howrah Bridge..*"))

"verifyElementPresent | link=Modify Profile |  | "
verifyTrue(selenium.isElementPresent("link=Modify Profile"))

"verifyElementPresent | link=Delete Profile |  | "
verifyTrue(selenium.isElementPresent("link=Delete Profile"))

"verifyElementPresent | link=Return to Main Menu |  | "
verifyTrue(selenium.isElementPresent("link=Return to Main Menu"))

"verifyText | id=contentwrapper | regexp:Credit Cards.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:Credit Cards..*"))

"verifyElementPresent | link=VisaToBeSearched |  | "
verifyTrue(selenium.isElementPresent("link=VisaToBeSearched"))

"verifyElementPresent | link=AuthCap |  | "
verifyTrue(selenium.isElementPresent("link=AuthCap"))

"verifyElementPresent | link=Auth |  | "
verifyTrue(selenium.isElementPresent("link=Auth"))

"verifyElementPresent | link=View |  | "
verifyTrue(selenium.isElementPresent("link=View"))

"verifyElementPresent | link=Edit |  | "
verifyTrue(selenium.isElementPresent("link=Edit"))

"verifyElementPresent | link=Delete |  | "
verifyTrue(selenium.isElementPresent("link=Delete"))

"verifyElementPresent | name=createCreditCardButton |  | "
verifyTrue(selenium.isElementPresent("name=createCreditCardButton"))

"verifyText | id=contentwrapper | regexp:On-line Checks.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:On-line Checks..*"))

"verifyElementPresent | link=BCToBeSearched |  | "
verifyTrue(selenium.isElementPresent("link=BCToBeSearched"))

"verifyElementPresent | link=PCToBeSearched |  | "
verifyTrue(selenium.isElementPresent("link=PCToBeSearched"))

"verifyElementPresent | name=createACHButton |  | "
verifyTrue(selenium.isElementPresent("name=createACHButton"))

"verifyElementPresent | link=Debit |  | "
verifyTrue(selenium.isElementPresent("link=Debit"))

"verifyElementPresent | xpath=(//a[contains(text(),'Debit')])[2] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'Debit')])[2]"))

"verifyElementPresent | xpath=(//a[contains(text(),'View')])[2] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'View')])[2]"))

"verifyElementPresent | xpath=(//a[contains(text(),'Edit')])[2] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'Edit')])[2]"))

"verifyElementPresent | xpath=(//a[contains(text(),'Delete')])[3] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'Delete')])[3]"))

"verifyElementPresent | xpath=(//a[contains(text(),'View')])[3] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'View')])[3]"))

"verifyElementPresent | xpath=(//a[contains(text(),'Edit')])[3] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'Edit')])[3]"))

"verifyElementPresent | xpath=(//a[contains(text(),'Delete')])[4] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'Delete')])[4]"))

"verifyText | id=contentwrapper | regexp:Accounts.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:Accounts..*"))

"verifyElementPresent | link=AccountToBeSearched |  | "
verifyTrue(selenium.isElementPresent("link=AccountToBeSearched"))

"verifyElementPresent | xpath=(//a[contains(text(),'View')])[4] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'View')])[4]"))

"verifyElementPresent | xpath=(//a[contains(text(),'Edit')])[4] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'Edit')])[4]"))

"verifyElementPresent | xpath=(//a[contains(text(),'Delete')])[5] |  | "
verifyTrue(selenium.isElementPresent("xpath=(//a[contains(text(),'Delete')])[5]"))

"verifyElementPresent | name=createButton |  | "
verifyTrue(selenium.isElementPresent("name=createButton"))

"verifyText | id=contentwrapper | regexp:Payment Plans.* | "
verifyTrue(selenium.getText("id=contentwrapper").matches("regexp:Payment Plans..*"))

"verifyElementPresent | css=form[name=PaymentPlanForm] > input[name=createButton] |  | "
verifyTrue(selenium.isElementPresent("css=form[name='PaymentPlanForm'] > input[name='createButton']"))

"click | link=Logout |  | "
selenium.click("link=Logout")
