import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.checkpoint.CheckpointFactory as CheckpointFactory
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as MobileBuiltInKeywords
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testcase.TestCaseFactory as TestCaseFactory
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testdata.TestDataFactory as TestDataFactory
import com.kms.katalon.core.testobject.ObjectRepository as ObjectRepository
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WSBuiltInKeywords
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUiBuiltInKeywords
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import internal.GlobalVariable as GlobalVariable
import com.kms.katalon.core.webui.driver.DriverFactory as DriverFactory
import com.kms.katalon.core.webui.driver.KatalonWebDriverBackedSelenium
import static com.kms.katalon.core.webui.driver.KatalonWebDriverBackedSelenium.*

import com.thoughtworks.selenium.Selenium
import org.openqa.selenium.Keys
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.WebDriver
import static org.junit.Assert.*
import java.util.concurrent.Callable
import java.util.regex.Pattern
import static org.apache.commons.lang3.StringUtils.join

'----------------------------------------------------'
'This test case script is generated by Katalon Studio'
'Generated date: 11-Jul-2023 07:29:50 PM'
'File path: C:\\Users\\imtiaz\\Documents\\Sel-New\\Prod-AdminSuite-NonBootstrap\\Prod-AdminSuite-NonBootstrap.side'
'Generated by: iahmed@govolution.com'
'----------------------------------------------------'

String baseUrl = ""

WebUI.openBrowser('')

selenium = new KatalonWebDriverBackedSelenium(baseUrl)

"open | https://www.velocitypayment.com/admin/testcustomer |  | "
selenium.open("https://www.velocitypayment.com/admin/testcustomer")

"pause | 2000 |  | "
Thread.sleep("2000")

"type | id=okta-signin-username | iahmed | "
selenium.type("id=okta-signin-username", "iahmed")

"type | id=okta-signin-password | Hello!2222222 | "
selenium.type("id=okta-signin-password", "Hello!2222222")

"click | id=okta-signin-submit |  | "
selenium.click("id=okta-signin-submit")

"pause | 2000 |  | "
Thread.sleep("2000")

"selectWindow | null |  | "
selenium.selectWindow("null")

"click | link=My Account |  | "
selenium.click("link=My Account")

"pause | 2000 |  | "
Thread.sleep("2000")

"verifyText | css=h2 | My Account | "
verifyEquals("My Account", selenium.getText("css=h2"))

"verifyText | css=#contentwrapper > p | Select the Manage Account Profile link below in order to review and update your email address, as well as select and answer your security questions. Your email address and security questions must be updated in the system for the self-service forgotten password feature to work properly. The forgotten password feature will allow you to reset your password without needing to contact your system administrator, in the event that you forget your password. | "
verifyEquals("Select the "Manage Account Profile" link below in order to review and update your email address, as well as select and answer your security questions. Your email address and security questions must be updated in the system for the self-service forgotten password feature to work properly. The forgotten password feature will allow you to reset your password without needing to contact your system administrator, in the event that you forget your password.", selenium.getText("css=#contentwrapper > p"))

"verifyElementPresent | link=Manage Account Profile |  | "
verifyTrue(selenium.isElementPresent("link=Manage Account Profile"))

"verifyText | //div[@id='contentwrapper']/p[3] | Select the Change Password link below in order to change your password or review the system password policy. | "
verifyEquals("Select the "Change Password" link below in order to change your password or review the system password policy.", selenium.getText("//div[@id='contentwrapper']/p[3]"))

"verifyElementPresent | link=Change Password |  | "
verifyTrue(selenium.isElementPresent("link=Change Password"))

"click | link=Manage Account Profile |  | "
selenium.click("link=Manage Account Profile")

"pause | 2000 |  | "
Thread.sleep("2000")

"verifyText | css=h2 | Manage Account Profile | "
verifyEquals("Manage Account Profile", selenium.getText("css=h2"))

"verifyText | css=p > span | Click the Modify button below in order to review and update your email address, as well as select and answer your security questions. Once you have completed your updates, click the Submit button to save your information. | "
verifyEquals("Click the "Modify" button below in order to review and update your email address, as well as select and answer your security questions. Once you have completed your updates, click the "Submit" button to save your information.", selenium.getText("css=p > span"))

"verifyText | css=h3 | User Information | "
verifyEquals("User Information", selenium.getText("css=h3"))

"verifyText | css=span.input-label | exact:Name: | "
verifyEquals("exact:Name:", selenium.getText("css=span.input-label"))

"verifyText | //div[@id='contentwrapper']/form/span[2] | Imtiaz Ahmed | "
verifyEquals("Imtiaz Ahmed", selenium.getText("//div[@id='contentwrapper']/form/span[2]"))

"verifyText | //div[@id='contentwrapper']/form/span[3] | User Name: | "
verifyEquals("User Name:", selenium.getText("//div[@id='contentwrapper']/form/span[3]"))

"verifyText | //div[@id='contentwrapper']/form/span[4] | iahmed | "
verifyEquals("iahmed", selenium.getText("//div[@id='contentwrapper']/form/span[4]"))

"verifyText | css=#contentwrapper > form | regexp:Email Address:.* | "
verifyTrue(selenium.getText("css=#contentwrapper > form").matches("regexp:Email Address:..*"))

"verifyText | css=#contentwrapper > form | regexp:iahmed@govolution.com.* | "
verifyTrue(selenium.getText("css=#contentwrapper > form").matches("regexp:iahmed@govolution.com..*"))

"verifyText | css=#contentwrapper > form | regexp:Cell Phone Number:.* | "
verifyTrue(selenium.getText("css=#contentwrapper > form").matches("regexp:Cell Phone Number:..*"))

"verifyText | css=#contentwrapper > form | regexp:240-893-9844.* | "
verifyTrue(selenium.getText("css=#contentwrapper > form").matches("regexp:240-893-9844..*"))

"verifyText | css=#contentwrapper > form | regexp:Security Questions.* | "
verifyTrue(selenium.getText("css=#contentwrapper > form").matches("regexp:Security Questions..*"))

"verifyText | css=form > ul > li | regexp:What was your childhood nickname?.* | "
verifyTrue(selenium.getText("css=form > ul > li").matches("regexp:What was your childhood nickname?..*"))

"verifyText | //div[@id='contentwrapper']/form/ul/li[2] | regexp:What is the name of your favorite childhood friend?.* | "
verifyTrue(selenium.getText("//div[@id='contentwrapper']/form/ul/li[2]").matches("regexp:What is the name of your favorite childhood friend?..*"))

"verifyText | //div[@id='contentwrapper']/form/ul/li[3] | regexp:What school did you attend for sixth grade?.* | "
verifyTrue(selenium.getText("//div[@id='contentwrapper']/form/ul/li[3]").matches("regexp:What school did you attend for sixth grade?..*"))

"verifyElementPresent | css=input[type=submit] |  | "
verifyTrue(selenium.isElementPresent("css=input[type='submit']"))

"click | link=My Account |  | "
selenium.click("link=My Account")

"pause | 2000 |  | "
Thread.sleep("2000")

"click | link=Change Password |  | "
selenium.click("link=Change Password")

"pause | 2000 |  | "
Thread.sleep("2000")

"verifyText | css=h2 | Change Password | "
verifyEquals("Change Password", selenium.getText("css=h2"))

"verifyText | css=form > p | regexp:To change your password, enter your current password. Next, enter a new password and confirm the new password. Please read the password policy for more information on the requirements for account passwords.* | "
verifyTrue(selenium.getText("css=form > p").matches("regexp:To change your password, enter your current password. Next, enter a new password and confirm the new password. Please read the password policy for more information on the requirements for account passwords..*"))

"verifyElementPresent | link=password policy |  | "
verifyTrue(selenium.isElementPresent("link=password policy"))

"verifyText | css=span.input-label | Current Password: | "
verifyEquals("Current Password:", selenium.getText("css=span.input-label"))

"verifyElementPresent | name=currentPassword |  | "
verifyTrue(selenium.isElementPresent("name=currentPassword"))

"verifyText | //div[@id='contentwrapper']/form/p/span[3] | New Password: | "
verifyEquals("New Password:", selenium.getText("//div[@id='contentwrapper']/form/p/span[3]"))

"verifyElementPresent | name=newPassword |  | "
verifyTrue(selenium.isElementPresent("name=newPassword"))

"verifyText | //div[@id='contentwrapper']/form/p/span[5] | Confirm New Password: | "
verifyEquals("Confirm New Password:", selenium.getText("//div[@id='contentwrapper']/form/p/span[5]"))

"verifyElementPresent | name=confirmPassword |  | "
verifyTrue(selenium.isElementPresent("name=confirmPassword"))

"verifyElementPresent | css=input[type=submit] |  | "
verifyTrue(selenium.isElementPresent("css=input[type='submit']"))

"verifyElementPresent | css=input[type=reset] |  | "
verifyTrue(selenium.isElementPresent("css=input[type='reset']"))

"click | link=My Account |  | "
selenium.click("link=My Account")

"pause | 2000 |  | "
Thread.sleep("2000")

"click | link=Logout |  | "
selenium.click("link=Logout")
