import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.checkpoint.CheckpointFactory as CheckpointFactory
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as MobileBuiltInKeywords
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testcase.TestCaseFactory as TestCaseFactory
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testdata.TestDataFactory as TestDataFactory
import com.kms.katalon.core.testobject.ObjectRepository as ObjectRepository
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WSBuiltInKeywords
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUiBuiltInKeywords
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import internal.GlobalVariable as GlobalVariable
import com.kms.katalon.core.webui.driver.DriverFactory as DriverFactory
import com.kms.katalon.core.webui.driver.KatalonWebDriverBackedSelenium
import static com.kms.katalon.core.webui.driver.KatalonWebDriverBackedSelenium.*

import com.thoughtworks.selenium.Selenium
import org.openqa.selenium.Keys
import org.openqa.selenium.firefox.FirefoxDriver
import org.openqa.selenium.WebDriver
import static org.junit.Assert.*
import java.util.concurrent.Callable
import java.util.regex.Pattern
import static org.apache.commons.lang3.StringUtils.join

'----------------------------------------------------'
'This test case script is generated by Katalon Studio'
'Generated date: 11-Jul-2023 07:30:10 PM'
'File path: C:\\Users\\imtiaz\\Documents\\Sel-New\\Prod-AdminSuite-NonBootstrap\\Prod-AdminSuite-NonBootstrap.side'
'Generated by: iahmed@govolution.com'
'----------------------------------------------------'

String baseUrl = ""

WebUI.openBrowser('')

selenium = new KatalonWebDriverBackedSelenium(baseUrl)

"open | https://www.velocitypayment.com/admin/testcustomer |  | "
selenium.open("https://www.velocitypayment.com/admin/testcustomer")

"pause | 2000 |  | "
Thread.sleep("2000")

"type | id=okta-signin-username | iahmed | "
selenium.type("id=okta-signin-username", "iahmed")

"type | id=okta-signin-password | Hello!2222222 | "
selenium.type("id=okta-signin-password", "Hello!2222222")

"click | id=okta-signin-submit |  | "
selenium.click("id=okta-signin-submit")

"pause | 2000 |  | "
Thread.sleep("2000")

"click | link=Access BWP License Fees GovTest |  | "
selenium.click("link=Access BWP License Fees GovTest")

"pause | 2000 |  | "
Thread.sleep("2000")

"click | link=Debit |  | "
selenium.click("link=Debit")

"click | xpath=(//input[@name='achtype'])[2] |  | "
selenium.click("xpath=(//input[@name='achtype'])[2]")

"click | css=input[type=submit] |  | "
selenium.click("css=input[type='submit']")

"storeText | name=process | RemiID | "
String RemiID = selenium.getText("name=process")

"storeEval | storedVars['RemiID'].substring(14,39).trim() | RemittanceID | "
String RemittanceID = selenium.getEval("storedVars['RemiID'].substring(14,39).trim()")

"echo | RemittanceID: RemittanceID |  | "
System.out.println("RemittanceID: " + RemittanceID)

"type | id=clientAcctNumber | 33333101 | "
selenium.type("id=clientAcctNumber", "33333101")

"type | name=companyName | Jason Holder Inc | "
selenium.type("name=companyName", "Jason Holder Inc")

"type | name=address | 45 Marina Drive | "
selenium.type("name=address", "45 Marina Drive")

"type | id=city | Arlington | "
selenium.type("id=city", "Arlington")

"pause | 1000 |  | "
Thread.sleep("1000")

"type | id=zip | 22201 | "
selenium.type("id=zip", "22201")

"type | id=routingNumber | 256072691 | "
selenium.type("id=routingNumber", "256072691")

"type | id=accountNumber | 44444444 | "
selenium.type("id=accountNumber", "44444444")

"type | id=confirmAccountNumber | 44444444 | "
selenium.type("id=confirmAccountNumber", "44444444")

"type | id=amount | 4.50 | "
selenium.type("id=amount", "4.50")

"type | name=userDefined1 | udf1 | "
selenium.type("name=userDefined1", "udf1")

"type | name=userDefined2 | udf2 | "
selenium.type("name=userDefined2", "udf2")

"type | name=userDefined3 | udf3 | "
selenium.type("name=userDefined3", "udf3")

"type | name=userDefined4 | udf4 | "
selenium.type("name=userDefined4", "udf4")

"type | name=userDefined5 | udf5 | "
selenium.type("name=userDefined5", "udf5")

"type | name=userDefined6 | udf6 | "
selenium.type("name=userDefined6", "udf6")

"click | id=submit1 |  | "
selenium.click("id=submit1")

"pause | 8000 |  | "
Thread.sleep("8000")

"select | id=state_us | label=Virginia | "
selenium.select("id=state_us", "label=Virginia")

"click | id=submit1 |  | "
selenium.click("id=submit1")

"verifyText | css=#maincontent-2col > h3 | Transaction Successful | "
verifyEquals("Transaction Successful", selenium.getText("css=#maincontent-2col > h3"))

"verifyText | id=maincontent-2col | regexp:Transaction Type: Debit.* | "
verifyTrue(selenium.getText("id=maincontent-2col").matches("regexp:Transaction Type: Debit..*"))

"click | link=Issue Transactions |  | "
selenium.click("link=Issue Transactions")

"click | xpath=(//a[contains(text(),'Credit or Void')])[2] |  | "
selenium.click("xpath=(//a[contains(text(),'Credit or Void')])[2]")

"type | name=searchValue | RemittanceID | "
selenium.type("name=searchValue", RemittanceID)

"addSelection | name=achTransactionTypes | label=Debit | "
selenium.addSelection("name=achTransactionTypes", "label=Debit")

"click | id=sbutton |  | "
selenium.click("id=sbutton")

"click | link=regexp:30.* |  | "
selenium.click("link=regexp:30.*")

"click | link=Void this transaction |  | "
selenium.click("link=Void this transaction")

"click | name=submit |  | "
selenium.click("name=submit")

"verifyText | css=#maincontent-2col > h3 | Transaction Successful | "
verifyEquals("Transaction Successful", selenium.getText("css=#maincontent-2col > h3"))

"verifyText | id=maincontent-2col | regexp:Transaction Type: Void.* | "
verifyTrue(selenium.getText("id=maincontent-2col").matches("regexp:Transaction Type: Void..*"))

"verifyText | id=maincontent-2col | regexp:Void.* | "
verifyTrue(selenium.getText("id=maincontent-2col").matches("regexp:Void..*"))

"click | link=Logout |  | "
selenium.click("link=Logout")
